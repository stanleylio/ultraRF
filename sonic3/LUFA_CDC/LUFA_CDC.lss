
LUFA_CDC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00001584  00001618  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001584  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800126  00800126  0000163e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000163e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000660  00000000  00000000  0000169a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000a734  00000000  00000000  00001cfa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002b87  00000000  00000000  0000c42e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000630a  00000000  00000000  0000efb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000fa4  00000000  00000000  000152c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003dca  00000000  00000000  00016264  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000066fd  00000000  00000000  0001a02e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000778  00000000  00000000  0002072b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a5 c0       	rjmp	.+330    	; 0x14c <__ctors_end>
       2:	00 00       	nop
       4:	bf c0       	rjmp	.+382    	; 0x184 <__bad_interrupt>
       6:	00 00       	nop
       8:	bd c0       	rjmp	.+378    	; 0x184 <__bad_interrupt>
       a:	00 00       	nop
       c:	bb c0       	rjmp	.+374    	; 0x184 <__bad_interrupt>
       e:	00 00       	nop
      10:	b9 c0       	rjmp	.+370    	; 0x184 <__bad_interrupt>
      12:	00 00       	nop
      14:	b7 c0       	rjmp	.+366    	; 0x184 <__bad_interrupt>
      16:	00 00       	nop
      18:	b5 c0       	rjmp	.+362    	; 0x184 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b3 c0       	rjmp	.+358    	; 0x184 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b1 c0       	rjmp	.+354    	; 0x184 <__bad_interrupt>
      22:	00 00       	nop
      24:	af c0       	rjmp	.+350    	; 0x184 <__bad_interrupt>
      26:	00 00       	nop
      28:	44 c4       	rjmp	.+2184   	; 0x8b2 <__vector_10>
      2a:	00 00       	nop
      2c:	08 c5       	rjmp	.+2576   	; 0xa3e <__vector_11>
      2e:	00 00       	nop
      30:	a9 c0       	rjmp	.+338    	; 0x184 <__bad_interrupt>
      32:	00 00       	nop
      34:	a7 c0       	rjmp	.+334    	; 0x184 <__bad_interrupt>
      36:	00 00       	nop
      38:	a5 c0       	rjmp	.+330    	; 0x184 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a3 c0       	rjmp	.+326    	; 0x184 <__bad_interrupt>
      3e:	00 00       	nop
      40:	a1 c0       	rjmp	.+322    	; 0x184 <__bad_interrupt>
      42:	00 00       	nop
      44:	9f c0       	rjmp	.+318    	; 0x184 <__bad_interrupt>
      46:	00 00       	nop
      48:	9d c0       	rjmp	.+314    	; 0x184 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	9b c0       	rjmp	.+310    	; 0x184 <__bad_interrupt>
      4e:	00 00       	nop
      50:	99 c0       	rjmp	.+306    	; 0x184 <__bad_interrupt>
      52:	00 00       	nop
      54:	97 c0       	rjmp	.+302    	; 0x184 <__bad_interrupt>
      56:	00 00       	nop
      58:	95 c0       	rjmp	.+298    	; 0x184 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	93 c0       	rjmp	.+294    	; 0x184 <__bad_interrupt>
      5e:	00 00       	nop
      60:	91 c0       	rjmp	.+290    	; 0x184 <__bad_interrupt>
      62:	00 00       	nop
      64:	8f c0       	rjmp	.+286    	; 0x184 <__bad_interrupt>
      66:	00 00       	nop
      68:	8d c0       	rjmp	.+282    	; 0x184 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	8b c0       	rjmp	.+278    	; 0x184 <__bad_interrupt>
      6e:	00 00       	nop
      70:	89 c0       	rjmp	.+274    	; 0x184 <__bad_interrupt>
      72:	00 00       	nop
      74:	a4 c0       	rjmp	.+328    	; 0x1be <__vector_29>
      76:	00 00       	nop
      78:	85 c0       	rjmp	.+266    	; 0x184 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	83 c0       	rjmp	.+262    	; 0x184 <__bad_interrupt>
      7e:	00 00       	nop
      80:	81 c0       	rjmp	.+258    	; 0x184 <__bad_interrupt>
      82:	00 00       	nop
      84:	7f c0       	rjmp	.+254    	; 0x184 <__bad_interrupt>
      86:	00 00       	nop
      88:	7d c0       	rjmp	.+250    	; 0x184 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	7b c0       	rjmp	.+246    	; 0x184 <__bad_interrupt>
      8e:	00 00       	nop
      90:	79 c0       	rjmp	.+242    	; 0x184 <__bad_interrupt>
      92:	00 00       	nop
      94:	77 c0       	rjmp	.+238    	; 0x184 <__bad_interrupt>
      96:	00 00       	nop
      98:	75 c0       	rjmp	.+234    	; 0x184 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	73 c0       	rjmp	.+230    	; 0x184 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	71 c0       	rjmp	.+226    	; 0x184 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	6f c0       	rjmp	.+222    	; 0x184 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	6d c0       	rjmp	.+218    	; 0x184 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	81 05       	cpc	r24, r1
      ae:	a3 05       	cpc	r26, r3
      b0:	85 06       	cpc	r8, r21
      b2:	a3 05       	cpc	r26, r3
      b4:	85 06       	cpc	r8, r21
      b6:	e5 05       	cpc	r30, r5
      b8:	06 06       	cpc	r0, r22
      ba:	85 06       	cpc	r8, r21
      bc:	58 06       	cpc	r5, r24
      be:	6a 06       	cpc	r6, r26

000000c0 <ProductString>:
      c0:	1c 03 4c 00 55 00 46 00 41 00 20 00 43 00 44 00     ..L.U.F.A. .C.D.
      d0:	43 00 20 00 44 00 65 00 6d 00 6f 00 00 00           C. .D.e.m.o...

000000de <ManufacturerString>:
      de:	18 03 44 00 65 00 61 00 6e 00 20 00 43 00 61 00     ..D.e.a.n. .C.a.
      ee:	6d 00 65 00 72 00 61 00 00 00                       m.e.r.a...

000000f8 <LanguageString>:
      f8:	04 03 09 04                                         ....

000000fc <ConfigurationDescriptor>:
      fc:	09 02 3e 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..>.....2.......
     10c:	01 00 05 24 00 10 01 04 24 02 06 05 24 06 00 01     ...$....$...$...
     11c:	07 05 82 03 08 00 ff 09 04 01 00 02 0a 00 00 00     ................
     12c:	07 05 04 02 10 00 05 07 05 83 02 10 00 05           ..............

0000013a <DeviceDescriptor>:
     13a:	12 01 10 01 02 00 00 08 eb 03 44 20 01 00 01 02     ..........D ....
     14a:	dc 01                                               ..

0000014c <__ctors_end>:
     14c:	11 24       	eor	r1, r1
     14e:	1f be       	out	0x3f, r1	; 63
     150:	cf ef       	ldi	r28, 0xFF	; 255
     152:	da e0       	ldi	r29, 0x0A	; 10
     154:	de bf       	out	0x3e, r29	; 62
     156:	cd bf       	out	0x3d, r28	; 61

00000158 <__do_copy_data>:
     158:	11 e0       	ldi	r17, 0x01	; 1
     15a:	a0 e0       	ldi	r26, 0x00	; 0
     15c:	b1 e0       	ldi	r27, 0x01	; 1
     15e:	e4 e8       	ldi	r30, 0x84	; 132
     160:	f5 e1       	ldi	r31, 0x15	; 21
     162:	02 c0       	rjmp	.+4      	; 0x168 <__do_copy_data+0x10>
     164:	05 90       	lpm	r0, Z+
     166:	0d 92       	st	X+, r0
     168:	a6 32       	cpi	r26, 0x26	; 38
     16a:	b1 07       	cpc	r27, r17
     16c:	d9 f7       	brne	.-10     	; 0x164 <__do_copy_data+0xc>

0000016e <__do_clear_bss>:
     16e:	21 e0       	ldi	r18, 0x01	; 1
     170:	a6 e2       	ldi	r26, 0x26	; 38
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	01 c0       	rjmp	.+2      	; 0x178 <.do_clear_bss_start>

00000176 <.do_clear_bss_loop>:
     176:	1d 92       	st	X+, r1

00000178 <.do_clear_bss_start>:
     178:	a4 33       	cpi	r26, 0x34	; 52
     17a:	b2 07       	cpc	r27, r18
     17c:	e1 f7       	brne	.-8      	; 0x176 <.do_clear_bss_loop>
     17e:	e2 d0       	rcall	.+452    	; 0x344 <main>
     180:	0c 94 c0 0a 	jmp	0x1580	; 0x1580 <_exit>

00000184 <__bad_interrupt>:
     184:	3d cf       	rjmp	.-390    	; 0x0 <__vectors>

00000186 <write_register>:
	return tmp;
}

static inline void write_register(uint8_t reg, uint8_t val)
{
	clear(PORTF,CSN);
     186:	8d 98       	cbi	0x11, 5	; 17
	SPI_TransferByte(W_REGISTER | reg);
     188:	80 62       	ori	r24, 0x20	; 32
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     18a:	8e bd       	out	0x2e, r24	; 46
				while (!(SPSR & (1 << SPIF)));
     18c:	0d b4       	in	r0, 0x2d	; 45
     18e:	07 fe       	sbrs	r0, 7
     190:	fd cf       	rjmp	.-6      	; 0x18c <write_register+0x6>
				return SPDR;
     192:	8e b5       	in	r24, 0x2e	; 46
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     194:	6e bd       	out	0x2e, r22	; 46
				while (!(SPSR & (1 << SPIF)));
     196:	0d b4       	in	r0, 0x2d	; 45
     198:	07 fe       	sbrs	r0, 7
     19a:	fd cf       	rjmp	.-6      	; 0x196 <write_register+0x10>
				return SPDR;
     19c:	8e b5       	in	r24, 0x2e	; 46
	SPI_TransferByte(val);
	set(PORTF,CSN);
     19e:	8d 9a       	sbi	0x11, 5	; 17
     1a0:	08 95       	ret

000001a2 <read_register>:
}

static inline uint8_t read_register(uint8_t reg)
{
	uint8_t tmp = 0;
	clear(PORTF,CSN);
     1a2:	8d 98       	cbi	0x11, 5	; 17
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     1a4:	8e bd       	out	0x2e, r24	; 46
				while (!(SPSR & (1 << SPIF)));
     1a6:	0d b4       	in	r0, 0x2d	; 45
     1a8:	07 fe       	sbrs	r0, 7
     1aa:	fd cf       	rjmp	.-6      	; 0x1a6 <read_register+0x4>
				return SPDR;
     1ac:	8e b5       	in	r24, 0x2e	; 46
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     1ae:	8f ef       	ldi	r24, 0xFF	; 255
     1b0:	8e bd       	out	0x2e, r24	; 46
				while (!(SPSR & (1 << SPIF)));
     1b2:	0d b4       	in	r0, 0x2d	; 45
     1b4:	07 fe       	sbrs	r0, 7
     1b6:	fd cf       	rjmp	.-6      	; 0x1b2 <read_register+0x10>
				return SPDR;
     1b8:	8e b5       	in	r24, 0x2e	; 46
	SPI_TransferByte(R_REGISTER | reg);
	tmp = SPI_TransferByte(NOP);
	set(PORTF,CSN);
     1ba:	8d 9a       	sbi	0x11, 5	; 17
	return tmp;
}
     1bc:	08 95       	ret

000001be <__vector_29>:
};

volatile int seq_count = 0;

ISR(ADC_vect)
{
     1be:	1f 92       	push	r1
     1c0:	0f 92       	push	r0
     1c2:	0f b6       	in	r0, 0x3f	; 63
     1c4:	0f 92       	push	r0
     1c6:	11 24       	eor	r1, r1
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	2f 93       	push	r18
     1ce:	3f 93       	push	r19
     1d0:	4f 93       	push	r20
     1d2:	5f 93       	push	r21
     1d4:	6f 93       	push	r22
     1d6:	7f 93       	push	r23
     1d8:	8f 93       	push	r24
     1da:	9f 93       	push	r25
     1dc:	af 93       	push	r26
     1de:	bf 93       	push	r27
     1e0:	ef 93       	push	r30
     1e2:	ff 93       	push	r31
     1e4:	cf 93       	push	r28
     1e6:	df 93       	push	r29
     1e8:	cd b7       	in	r28, 0x3d	; 61
     1ea:	de b7       	in	r29, 0x3e	; 62
     1ec:	6e 97       	sbiw	r28, 0x1e	; 30
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	cd bf       	out	0x3d, r28	; 61
	if (seq_count > 0)
     1f2:	80 91 26 01 	lds	r24, 0x0126
     1f6:	90 91 27 01 	lds	r25, 0x0127
     1fa:	18 16       	cp	r1, r24
     1fc:	19 06       	cpc	r1, r25
     1fe:	74 f5       	brge	.+92     	; 0x25c <__vector_29+0x9e>
	{
		//set(ADCSRA,ADSC);
		LED_amber_ON;
     200:	28 98       	cbi	0x05, 0	; 5
		seq_count--;
     202:	80 91 26 01 	lds	r24, 0x0126
     206:	90 91 27 01 	lds	r25, 0x0127
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	90 93 27 01 	sts	0x0127, r25
     210:	80 93 26 01 	sts	0x0126, r24
		
		char sbuf[30];
		int val = ADC;
     214:	20 91 78 00 	lds	r18, 0x0078
     218:	30 91 79 00 	lds	r19, 0x0079
		int got = snprintf(sbuf,sizeof(sbuf),"%04d,%04d\n",seq_count,val);
     21c:	80 91 26 01 	lds	r24, 0x0126
     220:	90 91 27 01 	lds	r25, 0x0127
     224:	3f 93       	push	r19
     226:	2f 93       	push	r18
     228:	9f 93       	push	r25
     22a:	8f 93       	push	r24
     22c:	8b e1       	ldi	r24, 0x1B	; 27
     22e:	91 e0       	ldi	r25, 0x01	; 1
     230:	9f 93       	push	r25
     232:	8f 93       	push	r24
     234:	1f 92       	push	r1
     236:	8e e1       	ldi	r24, 0x1E	; 30
     238:	8f 93       	push	r24
     23a:	8e 01       	movw	r16, r28
     23c:	0f 5f       	subi	r16, 0xFF	; 255
     23e:	1f 4f       	sbci	r17, 0xFF	; 255
     240:	1f 93       	push	r17
     242:	0f 93       	push	r16
     244:	d0 d6       	rcall	.+3488   	; 0xfe6 <snprintf>
		CDC_Device_SendData(&VirtualSerial_CDC_Interface,sbuf,got);
     246:	ac 01       	movw	r20, r24
     248:	b8 01       	movw	r22, r16
     24a:	80 e0       	ldi	r24, 0x00	; 0
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	b6 d5       	rcall	.+2924   	; 0xdbc <CDC_Device_SendData>
		
		LED_amber_OFF;
     250:	28 9a       	sbi	0x05, 0	; 5
     252:	0f b6       	in	r0, 0x3f	; 63
     254:	f8 94       	cli
     256:	de bf       	out	0x3e, r29	; 62
     258:	0f be       	out	0x3f, r0	; 63
     25a:	cd bf       	out	0x3d, r28	; 61
	}
	else
	{
		
	}
}
     25c:	6e 96       	adiw	r28, 0x1e	; 30
     25e:	0f b6       	in	r0, 0x3f	; 63
     260:	f8 94       	cli
     262:	de bf       	out	0x3e, r29	; 62
     264:	0f be       	out	0x3f, r0	; 63
     266:	cd bf       	out	0x3d, r28	; 61
     268:	df 91       	pop	r29
     26a:	cf 91       	pop	r28
     26c:	ff 91       	pop	r31
     26e:	ef 91       	pop	r30
     270:	bf 91       	pop	r27
     272:	af 91       	pop	r26
     274:	9f 91       	pop	r25
     276:	8f 91       	pop	r24
     278:	7f 91       	pop	r23
     27a:	6f 91       	pop	r22
     27c:	5f 91       	pop	r21
     27e:	4f 91       	pop	r20
     280:	3f 91       	pop	r19
     282:	2f 91       	pop	r18
     284:	1f 91       	pop	r17
     286:	0f 91       	pop	r16
     288:	0f 90       	pop	r0
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	0f 90       	pop	r0
     28e:	1f 90       	pop	r1
     290:	18 95       	reti

00000292 <SetupHardware>:


void SetupHardware(void)
{
	/* Disable watchdog if enabled by bootloader/fuses */
	MCUSR &= ~(1 << WDRF);
     292:	84 b7       	in	r24, 0x34	; 52
     294:	87 7f       	andi	r24, 0xF7	; 247
     296:	84 bf       	out	0x34, r24	; 52
	wdt_disable();
     298:	88 e1       	ldi	r24, 0x18	; 24
     29a:	0f b6       	in	r0, 0x3f	; 63
     29c:	f8 94       	cli
     29e:	80 93 60 00 	sts	0x0060, r24
     2a2:	10 92 60 00 	sts	0x0060, r1
     2a6:	0f be       	out	0x3f, r0	; 63
from 1 to 129. Thus, one does not need to use \c clock_div_t type as argument.
*/
void clock_prescale_set(clock_div_t __x)
{
    uint8_t __tmp = _BV(CLKPCE);
    __asm__ __volatile__ (
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	80 e8       	ldi	r24, 0x80	; 128
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	80 93 61 00 	sts	0x0061, r24
     2b4:	90 93 61 00 	sts	0x0061, r25
     2b8:	0f be       	out	0x3f, r0	; 63

	/* Disable clock division */
	clock_prescale_set(clock_div_1);

	/* Hardware Initialization */
	LED_amber_INIT;
     2ba:	20 9a       	sbi	0x04, 0	; 4
	LED_amber_OFF;
     2bc:	28 9a       	sbi	0x05, 0	; 5
	LED_green_INIT;
     2be:	55 9a       	sbi	0x0a, 5	; 10
	LED_green_OFF;
     2c0:	5d 9a       	sbi	0x0b, 5	; 11
}

static void init_nRF24L01(void)
{
	// nRF24L01+ control pins
	set(DDRF,CE);
     2c2:	86 9a       	sbi	0x10, 6	; 16
	set(DDRF,CSN);
     2c4:	85 9a       	sbi	0x10, 5	; 16
	clear(DDRB,IRQ);							// now on PB6
     2c6:	26 98       	cbi	0x04, 6	; 4
	clear(PORTF,CE);
     2c8:	8e 98       	cbi	0x11, 6	; 17
	set(PORTF,CSN);
     2ca:	8d 9a       	sbi	0x11, 5	; 17

	// SPI	might not need these
	DDRB |= 0b00000110;							// MOSI and SCK as output, PB6 as IRQ input
     2cc:	84 b1       	in	r24, 0x04	; 4
     2ce:	86 60       	ori	r24, 0x06	; 6
     2d0:	84 b9       	out	0x04, r24	; 4
	SPCR = _BV(SPE) | _BV(MSTR);				// Enable SPI as Master
     2d2:	80 e5       	ldi	r24, 0x50	; 80
     2d4:	8c bd       	out	0x2c, r24	; 44
	set(SPSR,SPI2X);							// awesome speed (fclk/2)
     2d6:	8d b5       	in	r24, 0x2d	; 45
     2d8:	81 60       	ori	r24, 0x01	; 1
     2da:	8d bd       	out	0x2d, r24	; 45

	write_register(CONFIG,0b00111110);			// POWER UP, 2-byte CRC, as PTX, mask TX_DS and MAX_RT
     2dc:	6e e3       	ldi	r22, 0x3E	; 62
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	52 df       	rcall	.-348    	; 0x186 <write_register>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e2:	8f e1       	ldi	r24, 0x1F	; 31
     2e4:	9e e4       	ldi	r25, 0x4E	; 78
     2e6:	01 97       	sbiw	r24, 0x01	; 1
     2e8:	f1 f7       	brne	.-4      	; 0x2e6 <SetupHardware+0x54>
     2ea:	00 c0       	rjmp	.+0      	; 0x2ec <SetupHardware+0x5a>
     2ec:	00 00       	nop
	_delay_ms(5);								// Tpd2stby, 4.5mS minimum for crystal
	write_register(EN_AA,0);					// disable auto retransmission
     2ee:	60 e0       	ldi	r22, 0x00	; 0
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	49 df       	rcall	.-366    	; 0x186 <write_register>
	write_register(SETUP_AW,0b00000001);		// 3-byte address field
     2f4:	61 e0       	ldi	r22, 0x01	; 1
     2f6:	83 e0       	ldi	r24, 0x03	; 3
     2f8:	46 df       	rcall	.-372    	; 0x186 <write_register>
	write_register(SETUP_RETR,0);				// 0 retry
     2fa:	60 e0       	ldi	r22, 0x00	; 0
     2fc:	84 e0       	ldi	r24, 0x04	; 4
     2fe:	43 df       	rcall	.-378    	; 0x186 <write_register>
	write_register(RF_CH,77);					// channel = 2400MHz + val MHz
     300:	6d e4       	ldi	r22, 0x4D	; 77
     302:	85 e0       	ldi	r24, 0x05	; 5
     304:	40 df       	rcall	.-384    	; 0x186 <write_register>
	//write_register(RF_SETUP,0b00100110);		// air rate=250kbps, power=0dBm
	//write_register(RF_SETUP,0b00100000);		// air rate=250kbps, power=-18dBm
	//write_register(RF_SETUP,0b00000110);		// air rate=1Mbps, power=0dBm
	write_register(RF_SETUP,0b00001110);		// air rate=2Mbps, power=0dBm
     306:	6e e0       	ldi	r22, 0x0E	; 14
     308:	86 e0       	ldi	r24, 0x06	; 6
     30a:	3d df       	rcall	.-390    	; 0x186 <write_register>
	write_register(RX_PW_P0,1);					// pipe0 payload length=1byte
     30c:	61 e0       	ldi	r22, 0x01	; 1
     30e:	81 e1       	ldi	r24, 0x11	; 17
     310:	3a df       	rcall	.-396    	; 0x186 <write_register>
	write_register(FEATURE,EN_DYN_ACK);			// enable no ack
     312:	60 e0       	ldi	r22, 0x00	; 0
     314:	8d e1       	ldi	r24, 0x1D	; 29
     316:	37 df       	rcall	.-402    	; 0x186 <write_register>
	return tmp;
}

static inline void flush_rx(void)
{
	clear(PORTF,CSN);
     318:	8d 98       	cbi	0x11, 5	; 17
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     31a:	82 ee       	ldi	r24, 0xE2	; 226
     31c:	8e bd       	out	0x2e, r24	; 46
				while (!(SPSR & (1 << SPIF)));
     31e:	0d b4       	in	r0, 0x2d	; 45
     320:	07 fe       	sbrs	r0, 7
     322:	fd cf       	rjmp	.-6      	; 0x31e <SetupHardware+0x8c>
				return SPDR;
     324:	8e b5       	in	r24, 0x2e	; 46
	SPI_TransferByte(FLUSH_RX);
	set(PORTF,CSN);
     326:	8d 9a       	sbi	0x11, 5	; 17
}

static inline void flush_tx(void)
{
	clear(PORTF,CSN);
     328:	8d 98       	cbi	0x11, 5	; 17
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     32a:	81 ee       	ldi	r24, 0xE1	; 225
     32c:	8e bd       	out	0x2e, r24	; 46
				while (!(SPSR & (1 << SPIF)));
     32e:	0d b4       	in	r0, 0x2d	; 45
     330:	07 fe       	sbrs	r0, 7
     332:	fd cf       	rjmp	.-6      	; 0x32e <SetupHardware+0x9c>
				return SPDR;
     334:	8e b5       	in	r24, 0x2e	; 46
	SPI_TransferByte(FLUSH_TX);
	set(PORTF,CSN);
     336:	8d 9a       	sbi	0x11, 5	; 17
	write_register(RF_SETUP,0b00001110);		// air rate=2Mbps, power=0dBm
	write_register(RX_PW_P0,1);					// pipe0 payload length=1byte
	write_register(FEATURE,EN_DYN_ACK);			// enable no ack
	flush_rx();
	flush_tx();
	write_register(STATUS,0b01110000);			// clear all interrupt flags
     338:	60 e7       	ldi	r22, 0x70	; 112
     33a:	87 e0       	ldi	r24, 0x07	; 7
     33c:	24 df       	rcall	.-440    	; 0x186 <write_register>
	
	init_nRF24L01();
	
	set(D9DDR,D9);
     33e:	25 9a       	sbi	0x04, 5	; 4
	clear(D9PORT,D9);
     340:	2d 98       	cbi	0x05, 5	; 5
	
	USB_Init();
     342:	9a c2       	rjmp	.+1332   	; 0x878 <USB_Init>

00000344 <main>:
		
	}
}

int main(void)
{
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	1f 92       	push	r1
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
	SetupHardware();
     34e:	a1 df       	rcall	.-190    	; 0x292 <SetupHardware>
			static inline void GlobalInterruptEnable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				sei();
     350:	78 94       	sei
	_delay_us(130);
}

static inline void nRF24_as_receiver(void)
{
	uint8_t config = read_register(CONFIG);
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	26 df       	rcall	.-436    	; 0x1a2 <read_register>
	set(config,PRIM_RX);
     356:	68 2f       	mov	r22, r24
     358:	61 60       	ori	r22, 0x01	; 1
	write_register(CONFIG,config);
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	14 df       	rcall	.-472    	; 0x186 <write_register>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     35e:	87 e0       	ldi	r24, 0x07	; 7
     360:	92 e0       	ldi	r25, 0x02	; 2
     362:	01 97       	sbiw	r24, 0x01	; 1
     364:	f1 f7       	brne	.-4      	; 0x362 <main+0x1e>
     366:	00 c0       	rjmp	.+0      	; 0x368 <main+0x24>
     368:	00 00       	nop
	_delay_us(130);
	set(PORTF,CE);
     36a:	8e 9a       	sbi	0x11, 6	; 17
     36c:	87 e0       	ldi	r24, 0x07	; 7
     36e:	92 e0       	ldi	r25, 0x02	; 2
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <main+0x2c>
     374:	00 c0       	rjmp	.+0      	; 0x376 <main+0x32>
     376:	00 00       	nop
	GlobalInterruptEnable();

	nRF24_as_receiver();
	
	clear(A0DDR,A0);
     378:	87 98       	cbi	0x10, 7	; 16
	clear_A0;
     37a:	8f 98       	cbi	0x11, 7	; 17
	DIDR0 = 0b10000000;
     37c:	80 e8       	ldi	r24, 0x80	; 128
     37e:	80 93 7e 00 	sts	0x007E, r24
	ADMUX = 0b01000111;			// AVCC as reference, MUX=ADC7
     382:	87 e4       	ldi	r24, 0x47	; 71
     384:	80 93 7c 00 	sts	0x007C, r24
	set(ADCSRA,ADEN);
     388:	80 91 7a 00 	lds	r24, 0x007A
     38c:	80 68       	ori	r24, 0x80	; 128
     38e:	80 93 7a 00 	sts	0x007A, r24
	set(ADCSRA,ADIE);
     392:	80 91 7a 00 	lds	r24, 0x007A
     396:	88 60       	ori	r24, 0x08	; 8
     398:	80 93 7a 00 	sts	0x007A, r24
	ADCSRA += 2;
     39c:	80 91 7a 00 	lds	r24, 0x007A
     3a0:	8e 5f       	subi	r24, 0xFE	; 254
     3a2:	80 93 7a 00 	sts	0x007A, r24
	ADCSRB = 0;
     3a6:	10 92 7b 00 	sts	0x007B, r1
	sei();
     3aa:	78 94       	sei
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     3ac:	81 e6       	ldi	r24, 0x61	; 97
     3ae:	f8 2e       	mov	r15, r24
     3b0:	ee 24       	eor	r14, r14
     3b2:	ea 94       	dec	r14
			int b = nRF24_get_from_FIFO();

			if (('a' == b) && (0 >= seq_count))
			{
				LED_green_ON;
				seq_count = SEQ_LENGTH;
     3b4:	00 ed       	ldi	r16, 0xD0	; 208
     3b6:	17 e0       	ldi	r17, 0x07	; 7
	return bit_is_set(tmp,TX_FULL);
}

static inline uint8_t nRF24_RX_FIFO_EMPTY(void)
{
	uint8_t tmp = read_register(FIFO_STATUS);
     3b8:	87 e1       	ldi	r24, 0x17	; 23
     3ba:	f3 de       	rcall	.-538    	; 0x1a2 <read_register>
     3bc:	89 83       	std	Y+1, r24	; 0x01
	return bit_is_set(tmp,RX_EMPTY);
     3be:	89 81       	ldd	r24, Y+1	; 0x01
	ADCSRB = 0;
	sei();
	
	while (1)
	{
		if (!nRF24_RX_FIFO_EMPTY())
     3c0:	80 fd       	sbrc	r24, 0
     3c2:	20 c0       	rjmp	.+64     	; 0x404 <main+0xc0>
}

static inline uint8_t nRF24_get_from_FIFO(void)
{
	uint8_t tmp = 0;
	clear(PORTF,CSN);
     3c4:	8d 98       	cbi	0x11, 5	; 17
     3c6:	fe bc       	out	0x2e, r15	; 46
				while (!(SPSR & (1 << SPIF)));
     3c8:	0d b4       	in	r0, 0x2d	; 45
     3ca:	07 fe       	sbrs	r0, 7
     3cc:	fd cf       	rjmp	.-6      	; 0x3c8 <main+0x84>
				return SPDR;
     3ce:	8e b5       	in	r24, 0x2e	; 46
			 *  \return Response byte from the attached SPI device.
			 */
			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
			{
				SPDR = Byte;
     3d0:	ee bc       	out	0x2e, r14	; 46
				while (!(SPSR & (1 << SPIF)));
     3d2:	0d b4       	in	r0, 0x2d	; 45
     3d4:	07 fe       	sbrs	r0, 7
     3d6:	fd cf       	rjmp	.-6      	; 0x3d2 <main+0x8e>
				return SPDR;
     3d8:	8e b5       	in	r24, 0x2e	; 46
	SPI_TransferByte(R_RX_PAYLOAD);
	tmp = SPI_TransferByte(NOP);
	set(PORTF,CSN);
     3da:	8d 9a       	sbi	0x11, 5	; 17
		{
			int b = nRF24_get_from_FIFO();

			if (('a' == b) && (0 >= seq_count))
     3dc:	81 36       	cpi	r24, 0x61	; 97
     3de:	91 f4       	brne	.+36     	; 0x404 <main+0xc0>
     3e0:	80 91 26 01 	lds	r24, 0x0126
     3e4:	90 91 27 01 	lds	r25, 0x0127
     3e8:	18 16       	cp	r1, r24
     3ea:	19 06       	cpc	r1, r25
     3ec:	5c f0       	brlt	.+22     	; 0x404 <main+0xc0>
			{
				LED_green_ON;
     3ee:	5d 98       	cbi	0x0b, 5	; 11
				seq_count = SEQ_LENGTH;
     3f0:	10 93 27 01 	sts	0x0127, r17
     3f4:	00 93 26 01 	sts	0x0126, r16
				set(ADCSRA,ADSC);
     3f8:	80 91 7a 00 	lds	r24, 0x007A
     3fc:	80 64       	ori	r24, 0x40	; 64
     3fe:	80 93 7a 00 	sts	0x007A, r24

				//_delay_ms(1);
				LED_green_OFF;
     402:	5d 9a       	sbi	0x0b, 5	; 11
		}
		
		// - - - - -
		// LUFA CDC overhead
		// - - - - -
		CDC_Device_USBTask(&VirtualSerial_CDC_Interface);		// MUST CALL THESE PERIODICALLY and FREQUENTLY! todo: how frequently?
     404:	80 e0       	ldi	r24, 0x00	; 0
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	23 d5       	rcall	.+2630   	; 0xe50 <CDC_Device_USBTask>
		USB_USBTask();
     40a:	98 d4       	rcall	.+2352   	; 0xd3c <USB_USBTask>
	}
     40c:	d5 cf       	rjmp	.-86     	; 0x3b8 <main+0x74>

0000040e <EVENT_USB_Device_Connect>:
	USB_Init();
}

/** Event handler for the library USB Connection event. */
void EVENT_USB_Device_Connect(void)
{
     40e:	08 95       	ret

00000410 <EVENT_USB_Device_Disconnect>:
	//
}

/** Event handler for the library USB Disconnection event. */
void EVENT_USB_Device_Disconnect(void)
{
     410:	08 95       	ret

00000412 <EVENT_USB_Device_ConfigurationChanged>:
/** Event handler for the library USB Configuration Changed event. */
void EVENT_USB_Device_ConfigurationChanged(void)
{
	bool ConfigSuccess = true;

	ConfigSuccess &= CDC_Device_ConfigureEndpoints(&VirtualSerial_CDC_Interface);
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	91 e0       	ldi	r25, 0x01	; 1
     416:	ad c4       	rjmp	.+2394   	; 0xd72 <CDC_Device_ConfigureEndpoints>

00000418 <EVENT_USB_Device_ControlRequest>:
}

/** Event handler for the library USB Control Request reception event. */
void EVENT_USB_Device_ControlRequest(void)
{
	CDC_Device_ProcessControlRequest(&VirtualSerial_CDC_Interface);
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	91 e0       	ldi	r25, 0x01	; 1
     41c:	2f c5       	rjmp	.+2654   	; 0xe7c <CDC_Device_ProcessControlRequest>

0000041e <CALLBACK_USB_GetDescriptor>:
     41e:	29 2f       	mov	r18, r25
     420:	33 27       	eor	r19, r19
     422:	22 30       	cpi	r18, 0x02	; 2
     424:	31 05       	cpc	r19, r1
     426:	59 f0       	breq	.+22     	; 0x43e <CALLBACK_USB_GetDescriptor+0x20>
     428:	23 30       	cpi	r18, 0x03	; 3
     42a:	31 05       	cpc	r19, r1
     42c:	69 f0       	breq	.+26     	; 0x448 <CALLBACK_USB_GetDescriptor+0x2a>
     42e:	21 30       	cpi	r18, 0x01	; 1
     430:	31 05       	cpc	r19, r1
     432:	f9 f4       	brne	.+62     	; 0x472 <CALLBACK_USB_GetDescriptor+0x54>
     434:	82 e1       	ldi	r24, 0x12	; 18
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	2a e3       	ldi	r18, 0x3A	; 58
     43a:	31 e0       	ldi	r19, 0x01	; 1
     43c:	1e c0       	rjmp	.+60     	; 0x47a <CALLBACK_USB_GetDescriptor+0x5c>
     43e:	8e e3       	ldi	r24, 0x3E	; 62
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	2c ef       	ldi	r18, 0xFC	; 252
     444:	30 e0       	ldi	r19, 0x00	; 0
     446:	19 c0       	rjmp	.+50     	; 0x47a <CALLBACK_USB_GetDescriptor+0x5c>
     448:	99 27       	eor	r25, r25
     44a:	81 30       	cpi	r24, 0x01	; 1
     44c:	91 05       	cpc	r25, r1
     44e:	41 f0       	breq	.+16     	; 0x460 <CALLBACK_USB_GetDescriptor+0x42>
     450:	82 30       	cpi	r24, 0x02	; 2
     452:	91 05       	cpc	r25, r1
     454:	41 f0       	breq	.+16     	; 0x466 <CALLBACK_USB_GetDescriptor+0x48>
     456:	89 2b       	or	r24, r25
     458:	61 f4       	brne	.+24     	; 0x472 <CALLBACK_USB_GetDescriptor+0x54>
     45a:	e8 ef       	ldi	r30, 0xF8	; 248
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	05 c0       	rjmp	.+10     	; 0x46a <CALLBACK_USB_GetDescriptor+0x4c>
     460:	ee ed       	ldi	r30, 0xDE	; 222
     462:	f0 e0       	ldi	r31, 0x00	; 0
     464:	02 c0       	rjmp	.+4      	; 0x46a <CALLBACK_USB_GetDescriptor+0x4c>
     466:	e0 ec       	ldi	r30, 0xC0	; 192
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	84 91       	lpm	r24, Z
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	9f 01       	movw	r18, r30
     470:	04 c0       	rjmp	.+8      	; 0x47a <CALLBACK_USB_GetDescriptor+0x5c>
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	20 e0       	ldi	r18, 0x00	; 0
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	fa 01       	movw	r30, r20
     47c:	31 83       	std	Z+1, r19	; 0x01
     47e:	20 83       	st	Z, r18
     480:	08 95       	ret

00000482 <Endpoint_Write_Stream_LE>:
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	7c 01       	movw	r14, r24
     494:	8b 01       	movw	r16, r22
     496:	ea 01       	movw	r28, r20
     498:	81 d1       	rcall	.+770    	; 0x79c <Endpoint_WaitUntilReady>
     49a:	81 11       	cpse	r24, r1
     49c:	30 c0       	rjmp	.+96     	; 0x4fe <Endpoint_Write_Stream_LE+0x7c>
     49e:	20 97       	sbiw	r28, 0x00	; 0
     4a0:	31 f0       	breq	.+12     	; 0x4ae <Endpoint_Write_Stream_LE+0x2c>
     4a2:	88 81       	ld	r24, Y
     4a4:	99 81       	ldd	r25, Y+1	; 0x01
     4a6:	08 1b       	sub	r16, r24
     4a8:	19 0b       	sbc	r17, r25
     4aa:	e8 0e       	add	r14, r24
     4ac:	f9 1e       	adc	r15, r25
     4ae:	c1 2c       	mov	r12, r1
     4b0:	d1 2c       	mov	r13, r1
     4b2:	01 15       	cp	r16, r1
     4b4:	11 05       	cpc	r17, r1
     4b6:	11 f1       	breq	.+68     	; 0x4fc <Endpoint_Write_Stream_LE+0x7a>
     4b8:	80 91 e8 00 	lds	r24, 0x00E8
     4bc:	85 fd       	sbrc	r24, 5
     4be:	13 c0       	rjmp	.+38     	; 0x4e6 <Endpoint_Write_Stream_LE+0x64>
     4c0:	80 91 e8 00 	lds	r24, 0x00E8
     4c4:	8e 77       	andi	r24, 0x7E	; 126
     4c6:	80 93 e8 00 	sts	0x00E8, r24
     4ca:	20 97       	sbiw	r28, 0x00	; 0
     4cc:	41 f0       	breq	.+16     	; 0x4de <Endpoint_Write_Stream_LE+0x5c>
     4ce:	88 81       	ld	r24, Y
     4d0:	99 81       	ldd	r25, Y+1	; 0x01
     4d2:	8c 0d       	add	r24, r12
     4d4:	9d 1d       	adc	r25, r13
     4d6:	99 83       	std	Y+1, r25	; 0x01
     4d8:	88 83       	st	Y, r24
     4da:	85 e0       	ldi	r24, 0x05	; 5
     4dc:	10 c0       	rjmp	.+32     	; 0x4fe <Endpoint_Write_Stream_LE+0x7c>
     4de:	5e d1       	rcall	.+700    	; 0x79c <Endpoint_WaitUntilReady>
     4e0:	88 23       	and	r24, r24
     4e2:	39 f3       	breq	.-50     	; 0x4b2 <Endpoint_Write_Stream_LE+0x30>
     4e4:	0c c0       	rjmp	.+24     	; 0x4fe <Endpoint_Write_Stream_LE+0x7c>
     4e6:	f7 01       	movw	r30, r14
     4e8:	81 91       	ld	r24, Z+
     4ea:	7f 01       	movw	r14, r30
     4ec:	80 93 f1 00 	sts	0x00F1, r24
     4f0:	01 50       	subi	r16, 0x01	; 1
     4f2:	11 09       	sbc	r17, r1
     4f4:	ff ef       	ldi	r31, 0xFF	; 255
     4f6:	cf 1a       	sub	r12, r31
     4f8:	df 0a       	sbc	r13, r31
     4fa:	db cf       	rjmp	.-74     	; 0x4b2 <Endpoint_Write_Stream_LE+0x30>
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	1f 91       	pop	r17
     504:	0f 91       	pop	r16
     506:	ff 90       	pop	r15
     508:	ef 90       	pop	r14
     50a:	df 90       	pop	r13
     50c:	cf 90       	pop	r12
     50e:	08 95       	ret

00000510 <Endpoint_Write_Control_Stream_LE>:
     510:	20 91 32 01 	lds	r18, 0x0132
     514:	30 91 33 01 	lds	r19, 0x0133
     518:	26 17       	cp	r18, r22
     51a:	37 07       	cpc	r19, r23
     51c:	48 f0       	brcs	.+18     	; 0x530 <Endpoint_Write_Control_Stream_LE+0x20>
     51e:	61 15       	cp	r22, r1
     520:	71 05       	cpc	r23, r1
     522:	39 f4       	brne	.+14     	; 0x532 <Endpoint_Write_Control_Stream_LE+0x22>
     524:	20 91 e8 00 	lds	r18, 0x00E8
     528:	2e 77       	andi	r18, 0x7E	; 126
     52a:	20 93 e8 00 	sts	0x00E8, r18
     52e:	01 c0       	rjmp	.+2      	; 0x532 <Endpoint_Write_Control_Stream_LE+0x22>
     530:	b9 01       	movw	r22, r18
     532:	fc 01       	movw	r30, r24
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	61 15       	cp	r22, r1
     538:	71 05       	cpc	r23, r1
     53a:	a1 f1       	breq	.+104    	; 0x5a4 <Endpoint_Write_Control_Stream_LE+0x94>
     53c:	8e b3       	in	r24, 0x1e	; 30
     53e:	88 23       	and	r24, r24
     540:	e1 f1       	breq	.+120    	; 0x5ba <Endpoint_Write_Control_Stream_LE+0xaa>
     542:	85 30       	cpi	r24, 0x05	; 5
     544:	e1 f1       	breq	.+120    	; 0x5be <Endpoint_Write_Control_Stream_LE+0xae>
     546:	80 91 e8 00 	lds	r24, 0x00E8
     54a:	83 fd       	sbrc	r24, 3
     54c:	34 c0       	rjmp	.+104    	; 0x5b6 <Endpoint_Write_Control_Stream_LE+0xa6>
     54e:	80 91 e8 00 	lds	r24, 0x00E8
     552:	82 ff       	sbrs	r24, 2
     554:	06 c0       	rjmp	.+12     	; 0x562 <Endpoint_Write_Control_Stream_LE+0x52>
     556:	80 91 e8 00 	lds	r24, 0x00E8
     55a:	82 ff       	sbrs	r24, 2
     55c:	26 c0       	rjmp	.+76     	; 0x5aa <Endpoint_Write_Control_Stream_LE+0x9a>
     55e:	80 e0       	ldi	r24, 0x00	; 0
     560:	08 95       	ret
     562:	80 91 e8 00 	lds	r24, 0x00E8
     566:	80 ff       	sbrs	r24, 0
     568:	e6 cf       	rjmp	.-52     	; 0x536 <Endpoint_Write_Control_Stream_LE+0x26>
     56a:	20 91 f3 00 	lds	r18, 0x00F3
     56e:	80 91 f2 00 	lds	r24, 0x00F2
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	92 2b       	or	r25, r18
     576:	61 15       	cp	r22, r1
     578:	71 05       	cpc	r23, r1
     57a:	51 f0       	breq	.+20     	; 0x590 <Endpoint_Write_Control_Stream_LE+0x80>
     57c:	88 30       	cpi	r24, 0x08	; 8
     57e:	91 05       	cpc	r25, r1
     580:	38 f4       	brcc	.+14     	; 0x590 <Endpoint_Write_Control_Stream_LE+0x80>
     582:	21 91       	ld	r18, Z+
     584:	20 93 f1 00 	sts	0x00F1, r18
     588:	61 50       	subi	r22, 0x01	; 1
     58a:	71 09       	sbc	r23, r1
     58c:	01 96       	adiw	r24, 0x01	; 1
     58e:	f3 cf       	rjmp	.-26     	; 0x576 <Endpoint_Write_Control_Stream_LE+0x66>
     590:	21 e0       	ldi	r18, 0x01	; 1
     592:	08 97       	sbiw	r24, 0x08	; 8
     594:	09 f0       	breq	.+2      	; 0x598 <Endpoint_Write_Control_Stream_LE+0x88>
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	80 91 e8 00 	lds	r24, 0x00E8
     59c:	8e 77       	andi	r24, 0x7E	; 126
     59e:	80 93 e8 00 	sts	0x00E8, r24
     5a2:	c9 cf       	rjmp	.-110    	; 0x536 <Endpoint_Write_Control_Stream_LE+0x26>
     5a4:	21 11       	cpse	r18, r1
     5a6:	ca cf       	rjmp	.-108    	; 0x53c <Endpoint_Write_Control_Stream_LE+0x2c>
     5a8:	d6 cf       	rjmp	.-84     	; 0x556 <Endpoint_Write_Control_Stream_LE+0x46>
     5aa:	8e b3       	in	r24, 0x1e	; 30
     5ac:	88 23       	and	r24, r24
     5ae:	29 f0       	breq	.+10     	; 0x5ba <Endpoint_Write_Control_Stream_LE+0xaa>
     5b0:	85 30       	cpi	r24, 0x05	; 5
     5b2:	89 f6       	brne	.-94     	; 0x556 <Endpoint_Write_Control_Stream_LE+0x46>
     5b4:	04 c0       	rjmp	.+8      	; 0x5be <Endpoint_Write_Control_Stream_LE+0xae>
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	08 95       	ret
     5ba:	82 e0       	ldi	r24, 0x02	; 2
     5bc:	08 95       	ret
     5be:	83 e0       	ldi	r24, 0x03	; 3
     5c0:	08 95       	ret

000005c2 <Endpoint_Write_Control_PStream_LE>:
     5c2:	20 91 32 01 	lds	r18, 0x0132
     5c6:	30 91 33 01 	lds	r19, 0x0133
     5ca:	26 17       	cp	r18, r22
     5cc:	37 07       	cpc	r19, r23
     5ce:	48 f0       	brcs	.+18     	; 0x5e2 <Endpoint_Write_Control_PStream_LE+0x20>
     5d0:	61 15       	cp	r22, r1
     5d2:	71 05       	cpc	r23, r1
     5d4:	39 f4       	brne	.+14     	; 0x5e4 <Endpoint_Write_Control_PStream_LE+0x22>
     5d6:	20 91 e8 00 	lds	r18, 0x00E8
     5da:	2e 77       	andi	r18, 0x7E	; 126
     5dc:	20 93 e8 00 	sts	0x00E8, r18
     5e0:	01 c0       	rjmp	.+2      	; 0x5e4 <Endpoint_Write_Control_PStream_LE+0x22>
     5e2:	b9 01       	movw	r22, r18
     5e4:	fc 01       	movw	r30, r24
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	61 15       	cp	r22, r1
     5ea:	71 05       	cpc	r23, r1
     5ec:	b9 f1       	breq	.+110    	; 0x65c <Endpoint_Write_Control_PStream_LE+0x9a>
     5ee:	8e b3       	in	r24, 0x1e	; 30
     5f0:	88 23       	and	r24, r24
     5f2:	09 f4       	brne	.+2      	; 0x5f6 <Endpoint_Write_Control_PStream_LE+0x34>
     5f4:	3e c0       	rjmp	.+124    	; 0x672 <Endpoint_Write_Control_PStream_LE+0xb0>
     5f6:	85 30       	cpi	r24, 0x05	; 5
     5f8:	09 f4       	brne	.+2      	; 0x5fc <Endpoint_Write_Control_PStream_LE+0x3a>
     5fa:	3d c0       	rjmp	.+122    	; 0x676 <Endpoint_Write_Control_PStream_LE+0xb4>
     5fc:	80 91 e8 00 	lds	r24, 0x00E8
     600:	83 fd       	sbrc	r24, 3
     602:	35 c0       	rjmp	.+106    	; 0x66e <Endpoint_Write_Control_PStream_LE+0xac>
     604:	80 91 e8 00 	lds	r24, 0x00E8
     608:	82 ff       	sbrs	r24, 2
     60a:	06 c0       	rjmp	.+12     	; 0x618 <Endpoint_Write_Control_PStream_LE+0x56>
     60c:	80 91 e8 00 	lds	r24, 0x00E8
     610:	82 ff       	sbrs	r24, 2
     612:	27 c0       	rjmp	.+78     	; 0x662 <Endpoint_Write_Control_PStream_LE+0xa0>
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	08 95       	ret
     618:	80 91 e8 00 	lds	r24, 0x00E8
     61c:	80 ff       	sbrs	r24, 0
     61e:	e4 cf       	rjmp	.-56     	; 0x5e8 <Endpoint_Write_Control_PStream_LE+0x26>
     620:	20 91 f3 00 	lds	r18, 0x00F3
     624:	80 91 f2 00 	lds	r24, 0x00F2
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	92 2b       	or	r25, r18
     62c:	61 15       	cp	r22, r1
     62e:	71 05       	cpc	r23, r1
     630:	59 f0       	breq	.+22     	; 0x648 <Endpoint_Write_Control_PStream_LE+0x86>
     632:	88 30       	cpi	r24, 0x08	; 8
     634:	91 05       	cpc	r25, r1
     636:	40 f4       	brcc	.+16     	; 0x648 <Endpoint_Write_Control_PStream_LE+0x86>
     638:	24 91       	lpm	r18, Z
     63a:	20 93 f1 00 	sts	0x00F1, r18
     63e:	31 96       	adiw	r30, 0x01	; 1
     640:	61 50       	subi	r22, 0x01	; 1
     642:	71 09       	sbc	r23, r1
     644:	01 96       	adiw	r24, 0x01	; 1
     646:	f2 cf       	rjmp	.-28     	; 0x62c <Endpoint_Write_Control_PStream_LE+0x6a>
     648:	21 e0       	ldi	r18, 0x01	; 1
     64a:	08 97       	sbiw	r24, 0x08	; 8
     64c:	09 f0       	breq	.+2      	; 0x650 <Endpoint_Write_Control_PStream_LE+0x8e>
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	80 91 e8 00 	lds	r24, 0x00E8
     654:	8e 77       	andi	r24, 0x7E	; 126
     656:	80 93 e8 00 	sts	0x00E8, r24
     65a:	c6 cf       	rjmp	.-116    	; 0x5e8 <Endpoint_Write_Control_PStream_LE+0x26>
     65c:	21 11       	cpse	r18, r1
     65e:	c7 cf       	rjmp	.-114    	; 0x5ee <Endpoint_Write_Control_PStream_LE+0x2c>
     660:	d5 cf       	rjmp	.-86     	; 0x60c <Endpoint_Write_Control_PStream_LE+0x4a>
     662:	8e b3       	in	r24, 0x1e	; 30
     664:	88 23       	and	r24, r24
     666:	29 f0       	breq	.+10     	; 0x672 <Endpoint_Write_Control_PStream_LE+0xb0>
     668:	85 30       	cpi	r24, 0x05	; 5
     66a:	81 f6       	brne	.-96     	; 0x60c <Endpoint_Write_Control_PStream_LE+0x4a>
     66c:	04 c0       	rjmp	.+8      	; 0x676 <Endpoint_Write_Control_PStream_LE+0xb4>
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	08 95       	ret
     672:	82 e0       	ldi	r24, 0x02	; 2
     674:	08 95       	ret
     676:	83 e0       	ldi	r24, 0x03	; 3
     678:	08 95       	ret

0000067a <Endpoint_ConfigureEndpoint_Prv>:
     67a:	98 2f       	mov	r25, r24
     67c:	97 30       	cpi	r25, 0x07	; 7
     67e:	58 f5       	brcc	.+86     	; 0x6d6 <Endpoint_ConfigureEndpoint_Prv+0x5c>
     680:	90 93 e9 00 	sts	0x00E9, r25
     684:	98 17       	cp	r25, r24
     686:	39 f0       	breq	.+14     	; 0x696 <Endpoint_ConfigureEndpoint_Prv+0x1c>
     688:	70 91 ec 00 	lds	r23, 0x00EC
     68c:	20 91 ed 00 	lds	r18, 0x00ED
     690:	50 91 f0 00 	lds	r21, 0x00F0
     694:	03 c0       	rjmp	.+6      	; 0x69c <Endpoint_ConfigureEndpoint_Prv+0x22>
     696:	24 2f       	mov	r18, r20
     698:	76 2f       	mov	r23, r22
     69a:	50 e0       	ldi	r21, 0x00	; 0
     69c:	21 ff       	sbrs	r18, 1
     69e:	19 c0       	rjmp	.+50     	; 0x6d2 <Endpoint_ConfigureEndpoint_Prv+0x58>
     6a0:	30 91 eb 00 	lds	r19, 0x00EB
     6a4:	3e 7f       	andi	r19, 0xFE	; 254
     6a6:	30 93 eb 00 	sts	0x00EB, r19
     6aa:	30 91 ed 00 	lds	r19, 0x00ED
     6ae:	3d 7f       	andi	r19, 0xFD	; 253
     6b0:	30 93 ed 00 	sts	0x00ED, r19
     6b4:	30 91 eb 00 	lds	r19, 0x00EB
     6b8:	31 60       	ori	r19, 0x01	; 1
     6ba:	30 93 eb 00 	sts	0x00EB, r19
     6be:	70 93 ec 00 	sts	0x00EC, r23
     6c2:	20 93 ed 00 	sts	0x00ED, r18
     6c6:	50 93 f0 00 	sts	0x00F0, r21
     6ca:	20 91 ee 00 	lds	r18, 0x00EE
     6ce:	27 ff       	sbrs	r18, 7
     6d0:	07 c0       	rjmp	.+14     	; 0x6e0 <Endpoint_ConfigureEndpoint_Prv+0x66>
     6d2:	9f 5f       	subi	r25, 0xFF	; 255
     6d4:	d3 cf       	rjmp	.-90     	; 0x67c <Endpoint_ConfigureEndpoint_Prv+0x2>
     6d6:	8f 70       	andi	r24, 0x0F	; 15
     6d8:	80 93 e9 00 	sts	0x00E9, r24
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	08 95       	ret
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	08 95       	ret

000006e4 <Endpoint_ConfigureEndpointTable>:
     6e4:	0f 93       	push	r16
     6e6:	1f 93       	push	r17
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	06 2f       	mov	r16, r22
     6ee:	ec 01       	movw	r28, r24
     6f0:	10 e0       	ldi	r17, 0x00	; 0
     6f2:	10 17       	cp	r17, r16
     6f4:	71 f1       	breq	.+92     	; 0x752 <Endpoint_ConfigureEndpointTable+0x6e>
     6f6:	98 81       	ld	r25, Y
     6f8:	99 23       	and	r25, r25
     6fa:	41 f1       	breq	.+80     	; 0x74c <Endpoint_ConfigureEndpointTable+0x68>
     6fc:	2c 81       	ldd	r18, Y+4	; 0x04
     6fe:	e9 81       	ldd	r30, Y+1	; 0x01
     700:	fa 81       	ldd	r31, Y+2	; 0x02
     702:	7b 81       	ldd	r23, Y+3	; 0x03
     704:	89 2f       	mov	r24, r25
     706:	8f 70       	andi	r24, 0x0F	; 15
     708:	87 30       	cpi	r24, 0x07	; 7
     70a:	10 f0       	brcs	.+4      	; 0x710 <Endpoint_ConfigureEndpointTable+0x2c>
     70c:	80 e0       	ldi	r24, 0x00	; 0
     70e:	22 c0       	rjmp	.+68     	; 0x754 <Endpoint_ConfigureEndpointTable+0x70>
     710:	22 30       	cpi	r18, 0x02	; 2
     712:	10 f0       	brcs	.+4      	; 0x718 <Endpoint_ConfigureEndpointTable+0x34>
     714:	56 e0       	ldi	r21, 0x06	; 6
     716:	01 c0       	rjmp	.+2      	; 0x71a <Endpoint_ConfigureEndpointTable+0x36>
     718:	52 e0       	ldi	r21, 0x02	; 2
     71a:	28 e0       	ldi	r18, 0x08	; 8
     71c:	30 e0       	ldi	r19, 0x00	; 0
     71e:	40 e0       	ldi	r20, 0x00	; 0
     720:	2e 17       	cp	r18, r30
     722:	3f 07       	cpc	r19, r31
     724:	20 f4       	brcc	.+8      	; 0x72e <Endpoint_ConfigureEndpointTable+0x4a>
     726:	4f 5f       	subi	r20, 0xFF	; 255
     728:	22 0f       	add	r18, r18
     72a:	33 1f       	adc	r19, r19
     72c:	f9 cf       	rjmp	.-14     	; 0x720 <Endpoint_ConfigureEndpointTable+0x3c>
     72e:	42 95       	swap	r20
     730:	40 7f       	andi	r20, 0xF0	; 240
     732:	45 2b       	or	r20, r21
     734:	69 2f       	mov	r22, r25
     736:	66 1f       	adc	r22, r22
     738:	66 27       	eor	r22, r22
     73a:	66 1f       	adc	r22, r22
     73c:	90 e4       	ldi	r25, 0x40	; 64
     73e:	79 9f       	mul	r23, r25
     740:	90 01       	movw	r18, r0
     742:	11 24       	eor	r1, r1
     744:	62 2b       	or	r22, r18
     746:	99 df       	rcall	.-206    	; 0x67a <Endpoint_ConfigureEndpoint_Prv>
     748:	88 23       	and	r24, r24
     74a:	01 f3       	breq	.-64     	; 0x70c <Endpoint_ConfigureEndpointTable+0x28>
     74c:	1f 5f       	subi	r17, 0xFF	; 255
     74e:	25 96       	adiw	r28, 0x05	; 5
     750:	d0 cf       	rjmp	.-96     	; 0x6f2 <Endpoint_ConfigureEndpointTable+0xe>
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	1f 91       	pop	r17
     75a:	0f 91       	pop	r16
     75c:	08 95       	ret

0000075e <Endpoint_ClearStatusStage>:
     75e:	80 91 2c 01 	lds	r24, 0x012C
     762:	87 fd       	sbrc	r24, 7
     764:	05 c0       	rjmp	.+10     	; 0x770 <Endpoint_ClearStatusStage+0x12>
     766:	80 91 e8 00 	lds	r24, 0x00E8
     76a:	80 ff       	sbrs	r24, 0
     76c:	0d c0       	rjmp	.+26     	; 0x788 <Endpoint_ClearStatusStage+0x2a>
     76e:	10 c0       	rjmp	.+32     	; 0x790 <Endpoint_ClearStatusStage+0x32>
     770:	80 91 e8 00 	lds	r24, 0x00E8
     774:	82 fd       	sbrc	r24, 2
     776:	04 c0       	rjmp	.+8      	; 0x780 <Endpoint_ClearStatusStage+0x22>
     778:	8e b3       	in	r24, 0x1e	; 30
     77a:	81 11       	cpse	r24, r1
     77c:	f9 cf       	rjmp	.-14     	; 0x770 <Endpoint_ClearStatusStage+0x12>
     77e:	08 95       	ret
     780:	80 91 e8 00 	lds	r24, 0x00E8
     784:	8b 77       	andi	r24, 0x7B	; 123
     786:	07 c0       	rjmp	.+14     	; 0x796 <Endpoint_ClearStatusStage+0x38>
     788:	8e b3       	in	r24, 0x1e	; 30
     78a:	81 11       	cpse	r24, r1
     78c:	ec cf       	rjmp	.-40     	; 0x766 <Endpoint_ClearStatusStage+0x8>
     78e:	08 95       	ret
     790:	80 91 e8 00 	lds	r24, 0x00E8
     794:	8e 77       	andi	r24, 0x7E	; 126
     796:	80 93 e8 00 	sts	0x00E8, r24
     79a:	08 95       	ret

0000079c <Endpoint_WaitUntilReady>:
     79c:	80 91 e4 00 	lds	r24, 0x00E4
     7a0:	90 91 e5 00 	lds	r25, 0x00E5
     7a4:	45 e6       	ldi	r20, 0x65	; 101
     7a6:	20 91 ec 00 	lds	r18, 0x00EC
     7aa:	20 ff       	sbrs	r18, 0
     7ac:	20 c0       	rjmp	.+64     	; 0x7ee <Endpoint_WaitUntilReady+0x52>
     7ae:	20 91 e8 00 	lds	r18, 0x00E8
     7b2:	20 fd       	sbrc	r18, 0
     7b4:	20 c0       	rjmp	.+64     	; 0x7f6 <Endpoint_WaitUntilReady+0x5a>
     7b6:	2e b3       	in	r18, 0x1e	; 30
     7b8:	22 23       	and	r18, r18
     7ba:	89 f0       	breq	.+34     	; 0x7de <Endpoint_WaitUntilReady+0x42>
     7bc:	25 30       	cpi	r18, 0x05	; 5
     7be:	89 f0       	breq	.+34     	; 0x7e2 <Endpoint_WaitUntilReady+0x46>
     7c0:	20 91 eb 00 	lds	r18, 0x00EB
     7c4:	25 fd       	sbrc	r18, 5
     7c6:	0f c0       	rjmp	.+30     	; 0x7e6 <Endpoint_WaitUntilReady+0x4a>
     7c8:	20 91 e4 00 	lds	r18, 0x00E4
     7cc:	30 91 e5 00 	lds	r19, 0x00E5
     7d0:	28 17       	cp	r18, r24
     7d2:	39 07       	cpc	r19, r25
     7d4:	41 f3       	breq	.-48     	; 0x7a6 <Endpoint_WaitUntilReady+0xa>
     7d6:	41 50       	subi	r20, 0x01	; 1
     7d8:	41 f0       	breq	.+16     	; 0x7ea <Endpoint_WaitUntilReady+0x4e>
     7da:	c9 01       	movw	r24, r18
     7dc:	e4 cf       	rjmp	.-56     	; 0x7a6 <Endpoint_WaitUntilReady+0xa>
     7de:	82 e0       	ldi	r24, 0x02	; 2
     7e0:	08 95       	ret
     7e2:	83 e0       	ldi	r24, 0x03	; 3
     7e4:	08 95       	ret
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	08 95       	ret
     7ea:	84 e0       	ldi	r24, 0x04	; 4
     7ec:	08 95       	ret
     7ee:	20 91 e8 00 	lds	r18, 0x00E8
     7f2:	22 ff       	sbrs	r18, 2
     7f4:	e0 cf       	rjmp	.-64     	; 0x7b6 <Endpoint_WaitUntilReady+0x1a>
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	08 95       	ret

000007fa <USB_ResetInterface>:
     7fa:	0f 93       	push	r16
     7fc:	1f 93       	push	r17
     7fe:	cf 93       	push	r28
     800:	df 93       	push	r29
     802:	4a d0       	rcall	.+148    	; 0x898 <USB_INT_DisableAllInterrupts>
     804:	51 d0       	rcall	.+162    	; 0x8a8 <USB_INT_ClearAllInterrupts>
     806:	c8 ed       	ldi	r28, 0xD8	; 216
     808:	d0 e0       	ldi	r29, 0x00	; 0
     80a:	88 81       	ld	r24, Y
     80c:	8f 77       	andi	r24, 0x7F	; 127
     80e:	88 83       	st	Y, r24
     810:	88 81       	ld	r24, Y
     812:	80 68       	ori	r24, 0x80	; 128
     814:	88 83       	st	Y, r24
     816:	88 81       	ld	r24, Y
     818:	8f 7d       	andi	r24, 0xDF	; 223
     81a:	88 83       	st	Y, r24
     81c:	19 bc       	out	0x29, r1	; 41
     81e:	1e ba       	out	0x1e, r1	; 30
     820:	10 92 28 01 	sts	0x0128, r1
     824:	10 92 2a 01 	sts	0x012A, r1
     828:	10 92 29 01 	sts	0x0129, r1
     82c:	00 ee       	ldi	r16, 0xE0	; 224
     82e:	10 e0       	ldi	r17, 0x00	; 0
     830:	f8 01       	movw	r30, r16
     832:	80 81       	ld	r24, Z
     834:	8b 7f       	andi	r24, 0xFB	; 251
     836:	80 83       	st	Z, r24
     838:	88 81       	ld	r24, Y
     83a:	81 60       	ori	r24, 0x01	; 1
     83c:	88 83       	st	Y, r24
     83e:	42 e0       	ldi	r20, 0x02	; 2
     840:	60 e0       	ldi	r22, 0x00	; 0
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	1a df       	rcall	.-460    	; 0x67a <Endpoint_ConfigureEndpoint_Prv>
     846:	e1 ee       	ldi	r30, 0xE1	; 225
     848:	f0 e0       	ldi	r31, 0x00	; 0
     84a:	80 81       	ld	r24, Z
     84c:	8e 7f       	andi	r24, 0xFE	; 254
     84e:	80 83       	st	Z, r24
     850:	e2 ee       	ldi	r30, 0xE2	; 226
     852:	f0 e0       	ldi	r31, 0x00	; 0
     854:	80 81       	ld	r24, Z
     856:	81 60       	ori	r24, 0x01	; 1
     858:	80 83       	st	Z, r24
     85a:	80 81       	ld	r24, Z
     85c:	88 60       	ori	r24, 0x08	; 8
     85e:	80 83       	st	Z, r24
     860:	f8 01       	movw	r30, r16
     862:	80 81       	ld	r24, Z
     864:	8e 7f       	andi	r24, 0xFE	; 254
     866:	80 83       	st	Z, r24
     868:	88 81       	ld	r24, Y
     86a:	80 61       	ori	r24, 0x10	; 16
     86c:	88 83       	st	Y, r24
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	1f 91       	pop	r17
     874:	0f 91       	pop	r16
     876:	08 95       	ret

00000878 <USB_Init>:
     878:	e8 ed       	ldi	r30, 0xD8	; 216
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	80 81       	ld	r24, Z
     87e:	8f 7e       	andi	r24, 0xEF	; 239
     880:	80 83       	st	Z, r24
     882:	e7 ed       	ldi	r30, 0xD7	; 215
     884:	f0 e0       	ldi	r31, 0x00	; 0
     886:	80 81       	ld	r24, Z
     888:	81 60       	ori	r24, 0x01	; 1
     88a:	80 83       	st	Z, r24
     88c:	84 e0       	ldi	r24, 0x04	; 4
     88e:	82 bf       	out	0x32, r24	; 50
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	80 93 2b 01 	sts	0x012B, r24
     896:	b1 cf       	rjmp	.-158    	; 0x7fa <USB_ResetInterface>

00000898 <USB_INT_DisableAllInterrupts>:
     898:	e8 ed       	ldi	r30, 0xD8	; 216
     89a:	f0 e0       	ldi	r31, 0x00	; 0
     89c:	80 81       	ld	r24, Z
     89e:	8e 7f       	andi	r24, 0xFE	; 254
     8a0:	80 83       	st	Z, r24
     8a2:	10 92 e2 00 	sts	0x00E2, r1
     8a6:	08 95       	ret

000008a8 <USB_INT_ClearAllInterrupts>:
     8a8:	10 92 da 00 	sts	0x00DA, r1
     8ac:	10 92 e1 00 	sts	0x00E1, r1
     8b0:	08 95       	ret

000008b2 <__vector_10>:
     8b2:	1f 92       	push	r1
     8b4:	0f 92       	push	r0
     8b6:	0f b6       	in	r0, 0x3f	; 63
     8b8:	0f 92       	push	r0
     8ba:	11 24       	eor	r1, r1
     8bc:	2f 93       	push	r18
     8be:	3f 93       	push	r19
     8c0:	4f 93       	push	r20
     8c2:	5f 93       	push	r21
     8c4:	6f 93       	push	r22
     8c6:	7f 93       	push	r23
     8c8:	8f 93       	push	r24
     8ca:	9f 93       	push	r25
     8cc:	af 93       	push	r26
     8ce:	bf 93       	push	r27
     8d0:	ef 93       	push	r30
     8d2:	ff 93       	push	r31
     8d4:	80 91 e1 00 	lds	r24, 0x00E1
     8d8:	82 ff       	sbrs	r24, 2
     8da:	0a c0       	rjmp	.+20     	; 0x8f0 <__vector_10+0x3e>
     8dc:	80 91 e2 00 	lds	r24, 0x00E2
     8e0:	82 ff       	sbrs	r24, 2
     8e2:	06 c0       	rjmp	.+12     	; 0x8f0 <__vector_10+0x3e>
     8e4:	80 91 e1 00 	lds	r24, 0x00E1
     8e8:	8b 7f       	andi	r24, 0xFB	; 251
     8ea:	80 93 e1 00 	sts	0x00E1, r24
     8ee:	25 d2       	rcall	.+1098   	; 0xd3a <USB_Event_Stub>
     8f0:	80 91 da 00 	lds	r24, 0x00DA
     8f4:	80 ff       	sbrs	r24, 0
     8f6:	1b c0       	rjmp	.+54     	; 0x92e <__vector_10+0x7c>
     8f8:	80 91 d8 00 	lds	r24, 0x00D8
     8fc:	80 ff       	sbrs	r24, 0
     8fe:	17 c0       	rjmp	.+46     	; 0x92e <__vector_10+0x7c>
     900:	80 91 da 00 	lds	r24, 0x00DA
     904:	8e 7f       	andi	r24, 0xFE	; 254
     906:	80 93 da 00 	sts	0x00DA, r24
     90a:	80 91 d9 00 	lds	r24, 0x00D9
     90e:	80 ff       	sbrs	r24, 0
     910:	0b c0       	rjmp	.+22     	; 0x928 <__vector_10+0x76>
     912:	80 e1       	ldi	r24, 0x10	; 16
     914:	89 bd       	out	0x29, r24	; 41
     916:	82 e1       	ldi	r24, 0x12	; 18
     918:	89 bd       	out	0x29, r24	; 41
     91a:	09 b4       	in	r0, 0x29	; 41
     91c:	00 fe       	sbrs	r0, 0
     91e:	fd cf       	rjmp	.-6      	; 0x91a <__vector_10+0x68>
     920:	81 e0       	ldi	r24, 0x01	; 1
     922:	8e bb       	out	0x1e, r24	; 30
     924:	74 dd       	rcall	.-1304   	; 0x40e <EVENT_USB_Device_Connect>
     926:	03 c0       	rjmp	.+6      	; 0x92e <__vector_10+0x7c>
     928:	19 bc       	out	0x29, r1	; 41
     92a:	1e ba       	out	0x1e, r1	; 30
     92c:	71 dd       	rcall	.-1310   	; 0x410 <EVENT_USB_Device_Disconnect>
     92e:	80 91 e1 00 	lds	r24, 0x00E1
     932:	80 ff       	sbrs	r24, 0
     934:	17 c0       	rjmp	.+46     	; 0x964 <__vector_10+0xb2>
     936:	80 91 e2 00 	lds	r24, 0x00E2
     93a:	80 ff       	sbrs	r24, 0
     93c:	13 c0       	rjmp	.+38     	; 0x964 <__vector_10+0xb2>
     93e:	80 91 e2 00 	lds	r24, 0x00E2
     942:	8e 7f       	andi	r24, 0xFE	; 254
     944:	80 93 e2 00 	sts	0x00E2, r24
     948:	80 91 e2 00 	lds	r24, 0x00E2
     94c:	80 61       	ori	r24, 0x10	; 16
     94e:	80 93 e2 00 	sts	0x00E2, r24
     952:	80 91 d8 00 	lds	r24, 0x00D8
     956:	80 62       	ori	r24, 0x20	; 32
     958:	80 93 d8 00 	sts	0x00D8, r24
     95c:	19 bc       	out	0x29, r1	; 41
     95e:	85 e0       	ldi	r24, 0x05	; 5
     960:	8e bb       	out	0x1e, r24	; 30
     962:	eb d1       	rcall	.+982    	; 0xd3a <USB_Event_Stub>
     964:	80 91 e1 00 	lds	r24, 0x00E1
     968:	84 ff       	sbrs	r24, 4
     96a:	2e c0       	rjmp	.+92     	; 0x9c8 <__vector_10+0x116>
     96c:	80 91 e2 00 	lds	r24, 0x00E2
     970:	84 ff       	sbrs	r24, 4
     972:	2a c0       	rjmp	.+84     	; 0x9c8 <__vector_10+0x116>
     974:	80 e1       	ldi	r24, 0x10	; 16
     976:	89 bd       	out	0x29, r24	; 41
     978:	82 e1       	ldi	r24, 0x12	; 18
     97a:	89 bd       	out	0x29, r24	; 41
     97c:	09 b4       	in	r0, 0x29	; 41
     97e:	00 fe       	sbrs	r0, 0
     980:	fd cf       	rjmp	.-6      	; 0x97c <__vector_10+0xca>
     982:	80 91 d8 00 	lds	r24, 0x00D8
     986:	8f 7d       	andi	r24, 0xDF	; 223
     988:	80 93 d8 00 	sts	0x00D8, r24
     98c:	80 91 e1 00 	lds	r24, 0x00E1
     990:	8f 7e       	andi	r24, 0xEF	; 239
     992:	80 93 e1 00 	sts	0x00E1, r24
     996:	80 91 e2 00 	lds	r24, 0x00E2
     99a:	8f 7e       	andi	r24, 0xEF	; 239
     99c:	80 93 e2 00 	sts	0x00E2, r24
     9a0:	80 91 e2 00 	lds	r24, 0x00E2
     9a4:	81 60       	ori	r24, 0x01	; 1
     9a6:	80 93 e2 00 	sts	0x00E2, r24
     9aa:	80 91 28 01 	lds	r24, 0x0128
     9ae:	88 23       	and	r24, r24
     9b0:	11 f0       	breq	.+4      	; 0x9b6 <__vector_10+0x104>
     9b2:	84 e0       	ldi	r24, 0x04	; 4
     9b4:	07 c0       	rjmp	.+14     	; 0x9c4 <__vector_10+0x112>
     9b6:	80 91 e3 00 	lds	r24, 0x00E3
     9ba:	87 ff       	sbrs	r24, 7
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <__vector_10+0x110>
     9be:	83 e0       	ldi	r24, 0x03	; 3
     9c0:	01 c0       	rjmp	.+2      	; 0x9c4 <__vector_10+0x112>
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	8e bb       	out	0x1e, r24	; 30
     9c6:	b9 d1       	rcall	.+882    	; 0xd3a <USB_Event_Stub>
     9c8:	80 91 e1 00 	lds	r24, 0x00E1
     9cc:	83 ff       	sbrs	r24, 3
     9ce:	26 c0       	rjmp	.+76     	; 0xa1c <__vector_10+0x16a>
     9d0:	80 91 e2 00 	lds	r24, 0x00E2
     9d4:	83 ff       	sbrs	r24, 3
     9d6:	22 c0       	rjmp	.+68     	; 0xa1c <__vector_10+0x16a>
     9d8:	80 91 e1 00 	lds	r24, 0x00E1
     9dc:	87 7f       	andi	r24, 0xF7	; 247
     9de:	80 93 e1 00 	sts	0x00E1, r24
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	8e bb       	out	0x1e, r24	; 30
     9e6:	10 92 28 01 	sts	0x0128, r1
     9ea:	80 91 e1 00 	lds	r24, 0x00E1
     9ee:	8e 7f       	andi	r24, 0xFE	; 254
     9f0:	80 93 e1 00 	sts	0x00E1, r24
     9f4:	80 91 e2 00 	lds	r24, 0x00E2
     9f8:	8e 7f       	andi	r24, 0xFE	; 254
     9fa:	80 93 e2 00 	sts	0x00E2, r24
     9fe:	80 91 e2 00 	lds	r24, 0x00E2
     a02:	80 61       	ori	r24, 0x10	; 16
     a04:	80 93 e2 00 	sts	0x00E2, r24
     a08:	42 e0       	ldi	r20, 0x02	; 2
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	35 de       	rcall	.-918    	; 0x67a <Endpoint_ConfigureEndpoint_Prv>
     a10:	80 91 f0 00 	lds	r24, 0x00F0
     a14:	88 60       	ori	r24, 0x08	; 8
     a16:	80 93 f0 00 	sts	0x00F0, r24
     a1a:	8f d1       	rcall	.+798    	; 0xd3a <USB_Event_Stub>
     a1c:	ff 91       	pop	r31
     a1e:	ef 91       	pop	r30
     a20:	bf 91       	pop	r27
     a22:	af 91       	pop	r26
     a24:	9f 91       	pop	r25
     a26:	8f 91       	pop	r24
     a28:	7f 91       	pop	r23
     a2a:	6f 91       	pop	r22
     a2c:	5f 91       	pop	r21
     a2e:	4f 91       	pop	r20
     a30:	3f 91       	pop	r19
     a32:	2f 91       	pop	r18
     a34:	0f 90       	pop	r0
     a36:	0f be       	out	0x3f, r0	; 63
     a38:	0f 90       	pop	r0
     a3a:	1f 90       	pop	r1
     a3c:	18 95       	reti

00000a3e <__vector_11>:
     a3e:	1f 92       	push	r1
     a40:	0f 92       	push	r0
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	0f 92       	push	r0
     a46:	11 24       	eor	r1, r1
     a48:	2f 93       	push	r18
     a4a:	3f 93       	push	r19
     a4c:	4f 93       	push	r20
     a4e:	5f 93       	push	r21
     a50:	6f 93       	push	r22
     a52:	7f 93       	push	r23
     a54:	8f 93       	push	r24
     a56:	9f 93       	push	r25
     a58:	af 93       	push	r26
     a5a:	bf 93       	push	r27
     a5c:	cf 93       	push	r28
     a5e:	ef 93       	push	r30
     a60:	ff 93       	push	r31
     a62:	c0 91 e9 00 	lds	r28, 0x00E9
     a66:	cf 70       	andi	r28, 0x0F	; 15
     a68:	80 91 ec 00 	lds	r24, 0x00EC
     a6c:	10 92 e9 00 	sts	0x00E9, r1
     a70:	80 91 f0 00 	lds	r24, 0x00F0
     a74:	87 7f       	andi	r24, 0xF7	; 247
     a76:	80 93 f0 00 	sts	0x00F0, r24
     a7a:	78 94       	sei
     a7c:	1b d0       	rcall	.+54     	; 0xab4 <USB_Device_ProcessControlRequest>
     a7e:	10 92 e9 00 	sts	0x00E9, r1
     a82:	80 91 f0 00 	lds	r24, 0x00F0
     a86:	88 60       	ori	r24, 0x08	; 8
     a88:	80 93 f0 00 	sts	0x00F0, r24
     a8c:	c0 93 e9 00 	sts	0x00E9, r28
     a90:	ff 91       	pop	r31
     a92:	ef 91       	pop	r30
     a94:	cf 91       	pop	r28
     a96:	bf 91       	pop	r27
     a98:	af 91       	pop	r26
     a9a:	9f 91       	pop	r25
     a9c:	8f 91       	pop	r24
     a9e:	7f 91       	pop	r23
     aa0:	6f 91       	pop	r22
     aa2:	5f 91       	pop	r21
     aa4:	4f 91       	pop	r20
     aa6:	3f 91       	pop	r19
     aa8:	2f 91       	pop	r18
     aaa:	0f 90       	pop	r0
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	0f 90       	pop	r0
     ab0:	1f 90       	pop	r1
     ab2:	18 95       	reti

00000ab4 <USB_Device_ProcessControlRequest>:
     ab4:	1f 93       	push	r17
     ab6:	cf 93       	push	r28
     ab8:	df 93       	push	r29
     aba:	cd b7       	in	r28, 0x3d	; 61
     abc:	de b7       	in	r29, 0x3e	; 62
     abe:	aa 97       	sbiw	r28, 0x2a	; 42
     ac0:	0f b6       	in	r0, 0x3f	; 63
     ac2:	f8 94       	cli
     ac4:	de bf       	out	0x3e, r29	; 62
     ac6:	0f be       	out	0x3f, r0	; 63
     ac8:	cd bf       	out	0x3d, r28	; 61
     aca:	ec e2       	ldi	r30, 0x2C	; 44
     acc:	f1 e0       	ldi	r31, 0x01	; 1
     ace:	80 91 f1 00 	lds	r24, 0x00F1
     ad2:	81 93       	st	Z+, r24
     ad4:	21 e0       	ldi	r18, 0x01	; 1
     ad6:	e4 33       	cpi	r30, 0x34	; 52
     ad8:	f2 07       	cpc	r31, r18
     ada:	c9 f7       	brne	.-14     	; 0xace <USB_Device_ProcessControlRequest+0x1a>
     adc:	9d dc       	rcall	.-1734   	; 0x418 <EVENT_USB_Device_ControlRequest>
     ade:	80 91 e8 00 	lds	r24, 0x00E8
     ae2:	83 ff       	sbrs	r24, 3
     ae4:	12 c1       	rjmp	.+548    	; 0xd0a <__stack+0x20b>
     ae6:	20 91 2c 01 	lds	r18, 0x012C
     aea:	30 91 2d 01 	lds	r19, 0x012D
     aee:	83 2f       	mov	r24, r19
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	8a 30       	cpi	r24, 0x0A	; 10
     af4:	91 05       	cpc	r25, r1
     af6:	08 f0       	brcs	.+2      	; 0xafa <USB_Device_ProcessControlRequest+0x46>
     af8:	08 c1       	rjmp	.+528    	; 0xd0a <__stack+0x20b>
     afa:	fc 01       	movw	r30, r24
     afc:	ea 5a       	subi	r30, 0xAA	; 170
     afe:	ff 4f       	sbci	r31, 0xFF	; 255
     b00:	6c c2       	rjmp	.+1240   	; 0xfda <__tablejump2__>
     b02:	20 38       	cpi	r18, 0x80	; 128
     b04:	81 f0       	breq	.+32     	; 0xb26 <__stack+0x27>
     b06:	22 38       	cpi	r18, 0x82	; 130
     b08:	09 f0       	breq	.+2      	; 0xb0c <__stack+0xd>
     b0a:	ff c0       	rjmp	.+510    	; 0xd0a <__stack+0x20b>
     b0c:	80 91 30 01 	lds	r24, 0x0130
     b10:	8f 70       	andi	r24, 0x0F	; 15
     b12:	80 93 e9 00 	sts	0x00E9, r24
     b16:	80 91 eb 00 	lds	r24, 0x00EB
     b1a:	85 fb       	bst	r24, 5
     b1c:	88 27       	eor	r24, r24
     b1e:	80 f9       	bld	r24, 0
     b20:	10 92 e9 00 	sts	0x00E9, r1
     b24:	06 c0       	rjmp	.+12     	; 0xb32 <__stack+0x33>
     b26:	80 91 29 01 	lds	r24, 0x0129
     b2a:	90 91 2a 01 	lds	r25, 0x012A
     b2e:	91 11       	cpse	r25, r1
     b30:	82 60       	ori	r24, 0x02	; 2
     b32:	90 91 e8 00 	lds	r25, 0x00E8
     b36:	97 7f       	andi	r25, 0xF7	; 247
     b38:	90 93 e8 00 	sts	0x00E8, r25
     b3c:	80 93 f1 00 	sts	0x00F1, r24
     b40:	10 92 f1 00 	sts	0x00F1, r1
     b44:	c0 c0       	rjmp	.+384    	; 0xcc6 <__stack+0x1c7>
     b46:	82 2f       	mov	r24, r18
     b48:	8d 7f       	andi	r24, 0xFD	; 253
     b4a:	09 f0       	breq	.+2      	; 0xb4e <__stack+0x4f>
     b4c:	de c0       	rjmp	.+444    	; 0xd0a <__stack+0x20b>
     b4e:	22 23       	and	r18, r18
     b50:	19 f0       	breq	.+6      	; 0xb58 <__stack+0x59>
     b52:	22 30       	cpi	r18, 0x02	; 2
     b54:	61 f0       	breq	.+24     	; 0xb6e <__stack+0x6f>
     b56:	d9 c0       	rjmp	.+434    	; 0xd0a <__stack+0x20b>
     b58:	80 91 2e 01 	lds	r24, 0x012E
     b5c:	81 30       	cpi	r24, 0x01	; 1
     b5e:	09 f0       	breq	.+2      	; 0xb62 <__stack+0x63>
     b60:	d4 c0       	rjmp	.+424    	; 0xd0a <__stack+0x20b>
     b62:	33 30       	cpi	r19, 0x03	; 3
     b64:	09 f0       	breq	.+2      	; 0xb68 <__stack+0x69>
     b66:	80 e0       	ldi	r24, 0x00	; 0
     b68:	80 93 2a 01 	sts	0x012A, r24
     b6c:	28 c0       	rjmp	.+80     	; 0xbbe <__stack+0xbf>
     b6e:	80 91 2e 01 	lds	r24, 0x012E
     b72:	81 11       	cpse	r24, r1
     b74:	24 c0       	rjmp	.+72     	; 0xbbe <__stack+0xbf>
     b76:	20 91 30 01 	lds	r18, 0x0130
     b7a:	2f 70       	andi	r18, 0x0F	; 15
     b7c:	09 f4       	brne	.+2      	; 0xb80 <__stack+0x81>
     b7e:	c5 c0       	rjmp	.+394    	; 0xd0a <__stack+0x20b>
     b80:	20 93 e9 00 	sts	0x00E9, r18
     b84:	80 91 eb 00 	lds	r24, 0x00EB
     b88:	80 ff       	sbrs	r24, 0
     b8a:	19 c0       	rjmp	.+50     	; 0xbbe <__stack+0xbf>
     b8c:	80 91 eb 00 	lds	r24, 0x00EB
     b90:	33 30       	cpi	r19, 0x03	; 3
     b92:	11 f4       	brne	.+4      	; 0xb98 <__stack+0x99>
     b94:	80 62       	ori	r24, 0x20	; 32
     b96:	11 c0       	rjmp	.+34     	; 0xbba <__stack+0xbb>
     b98:	80 61       	ori	r24, 0x10	; 16
     b9a:	80 93 eb 00 	sts	0x00EB, r24
     b9e:	81 e0       	ldi	r24, 0x01	; 1
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	02 2e       	mov	r0, r18
     ba4:	01 c0       	rjmp	.+2      	; 0xba8 <__stack+0xa9>
     ba6:	88 0f       	add	r24, r24
     ba8:	0a 94       	dec	r0
     baa:	ea f7       	brpl	.-6      	; 0xba6 <__stack+0xa7>
     bac:	80 93 ea 00 	sts	0x00EA, r24
     bb0:	10 92 ea 00 	sts	0x00EA, r1
     bb4:	80 91 eb 00 	lds	r24, 0x00EB
     bb8:	88 60       	ori	r24, 0x08	; 8
     bba:	80 93 eb 00 	sts	0x00EB, r24
     bbe:	10 92 e9 00 	sts	0x00E9, r1
     bc2:	80 91 e8 00 	lds	r24, 0x00E8
     bc6:	87 7f       	andi	r24, 0xF7	; 247
     bc8:	81 c0       	rjmp	.+258    	; 0xccc <__stack+0x1cd>
     bca:	21 11       	cpse	r18, r1
     bcc:	9e c0       	rjmp	.+316    	; 0xd0a <__stack+0x20b>
     bce:	10 91 2e 01 	lds	r17, 0x012E
     bd2:	1f 77       	andi	r17, 0x7F	; 127
     bd4:	80 91 e3 00 	lds	r24, 0x00E3
     bd8:	80 78       	andi	r24, 0x80	; 128
     bda:	81 2b       	or	r24, r17
     bdc:	80 93 e3 00 	sts	0x00E3, r24
     be0:	80 91 e8 00 	lds	r24, 0x00E8
     be4:	87 7f       	andi	r24, 0xF7	; 247
     be6:	80 93 e8 00 	sts	0x00E8, r24
     bea:	b9 dd       	rcall	.-1166   	; 0x75e <Endpoint_ClearStatusStage>
     bec:	80 91 e8 00 	lds	r24, 0x00E8
     bf0:	80 ff       	sbrs	r24, 0
     bf2:	fc cf       	rjmp	.-8      	; 0xbec <__stack+0xed>
     bf4:	80 91 e3 00 	lds	r24, 0x00E3
     bf8:	80 68       	ori	r24, 0x80	; 128
     bfa:	80 93 e3 00 	sts	0x00E3, r24
     bfe:	11 23       	and	r17, r17
     c00:	11 f0       	breq	.+4      	; 0xc06 <__stack+0x107>
     c02:	83 e0       	ldi	r24, 0x03	; 3
     c04:	01 c0       	rjmp	.+2      	; 0xc08 <__stack+0x109>
     c06:	82 e0       	ldi	r24, 0x02	; 2
     c08:	8e bb       	out	0x1e, r24	; 30
     c0a:	7f c0       	rjmp	.+254    	; 0xd0a <__stack+0x20b>
     c0c:	20 58       	subi	r18, 0x80	; 128
     c0e:	22 30       	cpi	r18, 0x02	; 2
     c10:	08 f0       	brcs	.+2      	; 0xc14 <__stack+0x115>
     c12:	7b c0       	rjmp	.+246    	; 0xd0a <__stack+0x20b>
     c14:	80 91 2e 01 	lds	r24, 0x012E
     c18:	90 91 2f 01 	lds	r25, 0x012F
     c1c:	8c 3d       	cpi	r24, 0xDC	; 220
     c1e:	23 e0       	ldi	r18, 0x03	; 3
     c20:	92 07       	cpc	r25, r18
     c22:	71 f5       	brne	.+92     	; 0xc80 <__stack+0x181>
     c24:	83 e0       	ldi	r24, 0x03	; 3
     c26:	8a 83       	std	Y+2, r24	; 0x02
     c28:	8a e2       	ldi	r24, 0x2A	; 42
     c2a:	89 83       	std	Y+1, r24	; 0x01
     c2c:	4f b7       	in	r20, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	de 01       	movw	r26, r28
     c32:	13 96       	adiw	r26, 0x03	; 3
     c34:	20 e0       	ldi	r18, 0x00	; 0
     c36:	3e e0       	ldi	r19, 0x0E	; 14
     c38:	51 e2       	ldi	r21, 0x21	; 33
     c3a:	e3 2f       	mov	r30, r19
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	50 93 57 00 	sts	0x0057, r21
     c42:	e4 91       	lpm	r30, Z
     c44:	20 ff       	sbrs	r18, 0
     c46:	03 c0       	rjmp	.+6      	; 0xc4e <__stack+0x14f>
     c48:	e2 95       	swap	r30
     c4a:	ef 70       	andi	r30, 0x0F	; 15
     c4c:	3f 5f       	subi	r19, 0xFF	; 255
     c4e:	ef 70       	andi	r30, 0x0F	; 15
     c50:	8e 2f       	mov	r24, r30
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	ea 30       	cpi	r30, 0x0A	; 10
     c56:	10 f0       	brcs	.+4      	; 0xc5c <__stack+0x15d>
     c58:	c7 96       	adiw	r24, 0x37	; 55
     c5a:	01 c0       	rjmp	.+2      	; 0xc5e <__stack+0x15f>
     c5c:	c0 96       	adiw	r24, 0x30	; 48
     c5e:	8d 93       	st	X+, r24
     c60:	9d 93       	st	X+, r25
     c62:	2f 5f       	subi	r18, 0xFF	; 255
     c64:	24 31       	cpi	r18, 0x14	; 20
     c66:	49 f7       	brne	.-46     	; 0xc3a <__stack+0x13b>
     c68:	4f bf       	out	0x3f, r20	; 63
     c6a:	80 91 e8 00 	lds	r24, 0x00E8
     c6e:	87 7f       	andi	r24, 0xF7	; 247
     c70:	80 93 e8 00 	sts	0x00E8, r24
     c74:	6a e2       	ldi	r22, 0x2A	; 42
     c76:	70 e0       	ldi	r23, 0x00	; 0
     c78:	ce 01       	movw	r24, r28
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	49 dc       	rcall	.-1902   	; 0x510 <Endpoint_Write_Control_Stream_LE>
     c7e:	12 c0       	rjmp	.+36     	; 0xca4 <__stack+0x1a5>
     c80:	ae 01       	movw	r20, r28
     c82:	4f 5f       	subi	r20, 0xFF	; 255
     c84:	5f 4f       	sbci	r21, 0xFF	; 255
     c86:	60 91 30 01 	lds	r22, 0x0130
     c8a:	c9 db       	rcall	.-2158   	; 0x41e <CALLBACK_USB_GetDescriptor>
     c8c:	00 97       	sbiw	r24, 0x00	; 0
     c8e:	09 f4       	brne	.+2      	; 0xc92 <__stack+0x193>
     c90:	3c c0       	rjmp	.+120    	; 0xd0a <__stack+0x20b>
     c92:	20 91 e8 00 	lds	r18, 0x00E8
     c96:	27 7f       	andi	r18, 0xF7	; 247
     c98:	20 93 e8 00 	sts	0x00E8, r18
     c9c:	bc 01       	movw	r22, r24
     c9e:	89 81       	ldd	r24, Y+1	; 0x01
     ca0:	9a 81       	ldd	r25, Y+2	; 0x02
     ca2:	8f dc       	rcall	.-1762   	; 0x5c2 <Endpoint_Write_Control_PStream_LE>
     ca4:	80 91 e8 00 	lds	r24, 0x00E8
     ca8:	8b 77       	andi	r24, 0x7B	; 123
     caa:	80 93 e8 00 	sts	0x00E8, r24
     cae:	2d c0       	rjmp	.+90     	; 0xd0a <__stack+0x20b>
     cb0:	20 38       	cpi	r18, 0x80	; 128
     cb2:	59 f5       	brne	.+86     	; 0xd0a <__stack+0x20b>
     cb4:	80 91 e8 00 	lds	r24, 0x00E8
     cb8:	87 7f       	andi	r24, 0xF7	; 247
     cba:	80 93 e8 00 	sts	0x00E8, r24
     cbe:	80 91 28 01 	lds	r24, 0x0128
     cc2:	80 93 f1 00 	sts	0x00F1, r24
     cc6:	80 91 e8 00 	lds	r24, 0x00E8
     cca:	8e 77       	andi	r24, 0x7E	; 126
     ccc:	80 93 e8 00 	sts	0x00E8, r24
     cd0:	46 dd       	rcall	.-1396   	; 0x75e <Endpoint_ClearStatusStage>
     cd2:	1b c0       	rjmp	.+54     	; 0xd0a <__stack+0x20b>
     cd4:	21 11       	cpse	r18, r1
     cd6:	19 c0       	rjmp	.+50     	; 0xd0a <__stack+0x20b>
     cd8:	90 91 2e 01 	lds	r25, 0x012E
     cdc:	92 30       	cpi	r25, 0x02	; 2
     cde:	a8 f4       	brcc	.+42     	; 0xd0a <__stack+0x20b>
     ce0:	80 91 e8 00 	lds	r24, 0x00E8
     ce4:	87 7f       	andi	r24, 0xF7	; 247
     ce6:	80 93 e8 00 	sts	0x00E8, r24
     cea:	90 93 28 01 	sts	0x0128, r25
     cee:	37 dd       	rcall	.-1426   	; 0x75e <Endpoint_ClearStatusStage>
     cf0:	80 91 28 01 	lds	r24, 0x0128
     cf4:	81 11       	cpse	r24, r1
     cf6:	04 c0       	rjmp	.+8      	; 0xd00 <__stack+0x201>
     cf8:	80 91 e3 00 	lds	r24, 0x00E3
     cfc:	87 ff       	sbrs	r24, 7
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <__stack+0x205>
     d00:	84 e0       	ldi	r24, 0x04	; 4
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <__stack+0x207>
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	8e bb       	out	0x1e, r24	; 30
     d08:	84 db       	rcall	.-2296   	; 0x412 <EVENT_USB_Device_ConfigurationChanged>
     d0a:	80 91 e8 00 	lds	r24, 0x00E8
     d0e:	83 ff       	sbrs	r24, 3
     d10:	0a c0       	rjmp	.+20     	; 0xd26 <__stack+0x227>
     d12:	80 91 e8 00 	lds	r24, 0x00E8
     d16:	87 7f       	andi	r24, 0xF7	; 247
     d18:	80 93 e8 00 	sts	0x00E8, r24
     d1c:	80 91 eb 00 	lds	r24, 0x00EB
     d20:	80 62       	ori	r24, 0x20	; 32
     d22:	80 93 eb 00 	sts	0x00EB, r24
     d26:	aa 96       	adiw	r28, 0x2a	; 42
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	de bf       	out	0x3e, r29	; 62
     d2e:	0f be       	out	0x3f, r0	; 63
     d30:	cd bf       	out	0x3d, r28	; 61
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	1f 91       	pop	r17
     d38:	08 95       	ret

00000d3a <USB_Event_Stub>:
     d3a:	08 95       	ret

00000d3c <USB_USBTask>:
     d3c:	cf 93       	push	r28
     d3e:	8e b3       	in	r24, 0x1e	; 30
     d40:	88 23       	and	r24, r24
     d42:	a9 f0       	breq	.+42     	; 0xd6e <USB_USBTask+0x32>
     d44:	80 91 e9 00 	lds	r24, 0x00E9
     d48:	8f 70       	andi	r24, 0x0F	; 15
     d4a:	90 91 ec 00 	lds	r25, 0x00EC
     d4e:	90 ff       	sbrs	r25, 0
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <USB_USBTask+0x1a>
     d52:	90 e8       	ldi	r25, 0x80	; 128
     d54:	01 c0       	rjmp	.+2      	; 0xd58 <USB_USBTask+0x1c>
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	c9 2f       	mov	r28, r25
     d5a:	c8 2b       	or	r28, r24
     d5c:	10 92 e9 00 	sts	0x00E9, r1
     d60:	80 91 e8 00 	lds	r24, 0x00E8
     d64:	83 fd       	sbrc	r24, 3
     d66:	a6 de       	rcall	.-692    	; 0xab4 <USB_Device_ProcessControlRequest>
     d68:	cf 70       	andi	r28, 0x0F	; 15
     d6a:	c0 93 e9 00 	sts	0x00E9, r28
     d6e:	cf 91       	pop	r28
     d70:	08 95       	ret

00000d72 <CDC_Device_ConfigureEndpoints>:
     d72:	cf 93       	push	r28
     d74:	df 93       	push	r29
     d76:	ec 01       	movw	r28, r24
     d78:	fc 01       	movw	r30, r24
     d7a:	70 96       	adiw	r30, 0x10	; 16
     d7c:	8b e0       	ldi	r24, 0x0B	; 11
     d7e:	df 01       	movw	r26, r30
     d80:	1d 92       	st	X+, r1
     d82:	8a 95       	dec	r24
     d84:	e9 f7       	brne	.-6      	; 0xd80 <CDC_Device_ConfigureEndpoints+0xe>
     d86:	82 e0       	ldi	r24, 0x02	; 2
     d88:	8c 83       	std	Y+4, r24	; 0x04
     d8a:	89 87       	std	Y+9, r24	; 0x09
     d8c:	83 e0       	ldi	r24, 0x03	; 3
     d8e:	8e 87       	std	Y+14, r24	; 0x0e
     d90:	61 e0       	ldi	r22, 0x01	; 1
     d92:	ce 01       	movw	r24, r28
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	a6 dc       	rcall	.-1716   	; 0x6e4 <Endpoint_ConfigureEndpointTable>
     d98:	88 23       	and	r24, r24
     d9a:	61 f0       	breq	.+24     	; 0xdb4 <CDC_Device_ConfigureEndpoints+0x42>
     d9c:	61 e0       	ldi	r22, 0x01	; 1
     d9e:	ce 01       	movw	r24, r28
     da0:	06 96       	adiw	r24, 0x06	; 6
     da2:	a0 dc       	rcall	.-1728   	; 0x6e4 <Endpoint_ConfigureEndpointTable>
     da4:	88 23       	and	r24, r24
     da6:	31 f0       	breq	.+12     	; 0xdb4 <CDC_Device_ConfigureEndpoints+0x42>
     da8:	61 e0       	ldi	r22, 0x01	; 1
     daa:	ce 01       	movw	r24, r28
     dac:	0b 96       	adiw	r24, 0x0b	; 11
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	98 cc       	rjmp	.-1744   	; 0x6e4 <Endpoint_ConfigureEndpointTable>
     db4:	80 e0       	ldi	r24, 0x00	; 0
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	08 95       	ret

00000dbc <CDC_Device_SendData>:
     dbc:	0f 93       	push	r16
     dbe:	1f 93       	push	r17
     dc0:	fc 01       	movw	r30, r24
     dc2:	cb 01       	movw	r24, r22
     dc4:	ba 01       	movw	r22, r20
     dc6:	2e b3       	in	r18, 0x1e	; 30
     dc8:	24 30       	cpi	r18, 0x04	; 4
     dca:	89 f4       	brne	.+34     	; 0xdee <CDC_Device_SendData+0x32>
     dcc:	04 89       	ldd	r16, Z+20	; 0x14
     dce:	15 89       	ldd	r17, Z+21	; 0x15
     dd0:	26 89       	ldd	r18, Z+22	; 0x16
     dd2:	37 89       	ldd	r19, Z+23	; 0x17
     dd4:	01 2b       	or	r16, r17
     dd6:	02 2b       	or	r16, r18
     dd8:	03 2b       	or	r16, r19
     dda:	49 f0       	breq	.+18     	; 0xdee <CDC_Device_SendData+0x32>
     ddc:	21 81       	ldd	r18, Z+1	; 0x01
     dde:	2f 70       	andi	r18, 0x0F	; 15
     de0:	20 93 e9 00 	sts	0x00E9, r18
     de4:	40 e0       	ldi	r20, 0x00	; 0
     de6:	50 e0       	ldi	r21, 0x00	; 0
     de8:	1f 91       	pop	r17
     dea:	0f 91       	pop	r16
     dec:	4a cb       	rjmp	.-2412   	; 0x482 <Endpoint_Write_Stream_LE>
     dee:	82 e0       	ldi	r24, 0x02	; 2
     df0:	1f 91       	pop	r17
     df2:	0f 91       	pop	r16
     df4:	08 95       	ret

00000df6 <CDC_Device_Flush>:
     df6:	2e b3       	in	r18, 0x1e	; 30
     df8:	24 30       	cpi	r18, 0x04	; 4
     dfa:	41 f5       	brne	.+80     	; 0xe4c <CDC_Device_Flush+0x56>
     dfc:	fc 01       	movw	r30, r24
     dfe:	44 89       	ldd	r20, Z+20	; 0x14
     e00:	55 89       	ldd	r21, Z+21	; 0x15
     e02:	66 89       	ldd	r22, Z+22	; 0x16
     e04:	77 89       	ldd	r23, Z+23	; 0x17
     e06:	45 2b       	or	r20, r21
     e08:	46 2b       	or	r20, r22
     e0a:	47 2b       	or	r20, r23
     e0c:	f9 f0       	breq	.+62     	; 0xe4c <CDC_Device_Flush+0x56>
     e0e:	81 81       	ldd	r24, Z+1	; 0x01
     e10:	8f 70       	andi	r24, 0x0F	; 15
     e12:	80 93 e9 00 	sts	0x00E9, r24
     e16:	20 91 f3 00 	lds	r18, 0x00F3
     e1a:	80 91 f2 00 	lds	r24, 0x00F2
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	92 2b       	or	r25, r18
     e22:	89 2b       	or	r24, r25
     e24:	89 f0       	breq	.+34     	; 0xe48 <CDC_Device_Flush+0x52>
     e26:	90 91 e8 00 	lds	r25, 0x00E8
     e2a:	80 91 e8 00 	lds	r24, 0x00E8
     e2e:	8e 77       	andi	r24, 0x7E	; 126
     e30:	80 93 e8 00 	sts	0x00E8, r24
     e34:	95 fd       	sbrc	r25, 5
     e36:	08 c0       	rjmp	.+16     	; 0xe48 <CDC_Device_Flush+0x52>
     e38:	b1 dc       	rcall	.-1694   	; 0x79c <Endpoint_WaitUntilReady>
     e3a:	81 11       	cpse	r24, r1
     e3c:	08 c0       	rjmp	.+16     	; 0xe4e <CDC_Device_Flush+0x58>
     e3e:	80 91 e8 00 	lds	r24, 0x00E8
     e42:	8e 77       	andi	r24, 0x7E	; 126
     e44:	80 93 e8 00 	sts	0x00E8, r24
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	08 95       	ret
     e4c:	82 e0       	ldi	r24, 0x02	; 2
     e4e:	08 95       	ret

00000e50 <CDC_Device_USBTask>:
     e50:	2e b3       	in	r18, 0x1e	; 30
     e52:	24 30       	cpi	r18, 0x04	; 4
     e54:	89 f4       	brne	.+34     	; 0xe78 <CDC_Device_USBTask+0x28>
     e56:	fc 01       	movw	r30, r24
     e58:	44 89       	ldd	r20, Z+20	; 0x14
     e5a:	55 89       	ldd	r21, Z+21	; 0x15
     e5c:	66 89       	ldd	r22, Z+22	; 0x16
     e5e:	77 89       	ldd	r23, Z+23	; 0x17
     e60:	45 2b       	or	r20, r21
     e62:	46 2b       	or	r20, r22
     e64:	47 2b       	or	r20, r23
     e66:	41 f0       	breq	.+16     	; 0xe78 <CDC_Device_USBTask+0x28>
     e68:	21 81       	ldd	r18, Z+1	; 0x01
     e6a:	2f 70       	andi	r18, 0x0F	; 15
     e6c:	20 93 e9 00 	sts	0x00E9, r18
     e70:	20 91 e8 00 	lds	r18, 0x00E8
     e74:	20 fd       	sbrc	r18, 0
     e76:	bf cf       	rjmp	.-130    	; 0xdf6 <CDC_Device_Flush>
     e78:	08 95       	ret

00000e7a <CDC_Device_Event_Stub>:
     e7a:	08 95       	ret

00000e7c <CDC_Device_ProcessControlRequest>:
     e7c:	cf 93       	push	r28
     e7e:	df 93       	push	r29
     e80:	ec 01       	movw	r28, r24
     e82:	80 91 e8 00 	lds	r24, 0x00E8
     e86:	83 ff       	sbrs	r24, 3
     e88:	a5 c0       	rjmp	.+330    	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     e8a:	88 81       	ld	r24, Y
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	20 91 30 01 	lds	r18, 0x0130
     e92:	30 91 31 01 	lds	r19, 0x0131
     e96:	28 17       	cp	r18, r24
     e98:	39 07       	cpc	r19, r25
     e9a:	09 f0       	breq	.+2      	; 0xe9e <CDC_Device_ProcessControlRequest+0x22>
     e9c:	9b c0       	rjmp	.+310    	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     e9e:	80 91 2d 01 	lds	r24, 0x012D
     ea2:	81 32       	cpi	r24, 0x21	; 33
     ea4:	61 f0       	breq	.+24     	; 0xebe <CDC_Device_ProcessControlRequest+0x42>
     ea6:	20 f4       	brcc	.+8      	; 0xeb0 <CDC_Device_ProcessControlRequest+0x34>
     ea8:	80 32       	cpi	r24, 0x20	; 32
     eaa:	09 f4       	brne	.+2      	; 0xeae <CDC_Device_ProcessControlRequest+0x32>
     eac:	3e c0       	rjmp	.+124    	; 0xf2a <CDC_Device_ProcessControlRequest+0xae>
     eae:	92 c0       	rjmp	.+292    	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     eb0:	82 32       	cpi	r24, 0x22	; 34
     eb2:	09 f4       	brne	.+2      	; 0xeb6 <CDC_Device_ProcessControlRequest+0x3a>
     eb4:	6b c0       	rjmp	.+214    	; 0xf8c <CDC_Device_ProcessControlRequest+0x110>
     eb6:	83 32       	cpi	r24, 0x23	; 35
     eb8:	09 f4       	brne	.+2      	; 0xebc <CDC_Device_ProcessControlRequest+0x40>
     eba:	7c c0       	rjmp	.+248    	; 0xfb4 <CDC_Device_ProcessControlRequest+0x138>
     ebc:	8b c0       	rjmp	.+278    	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     ebe:	80 91 2c 01 	lds	r24, 0x012C
     ec2:	81 3a       	cpi	r24, 0xA1	; 161
     ec4:	09 f0       	breq	.+2      	; 0xec8 <CDC_Device_ProcessControlRequest+0x4c>
     ec6:	86 c0       	rjmp	.+268    	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     ec8:	80 91 e8 00 	lds	r24, 0x00E8
     ecc:	87 7f       	andi	r24, 0xF7	; 247
     ece:	80 93 e8 00 	sts	0x00E8, r24
     ed2:	80 91 e8 00 	lds	r24, 0x00E8
     ed6:	80 ff       	sbrs	r24, 0
     ed8:	fc cf       	rjmp	.-8      	; 0xed2 <CDC_Device_ProcessControlRequest+0x56>
     eda:	4c 89       	ldd	r20, Y+20	; 0x14
     edc:	5d 89       	ldd	r21, Y+21	; 0x15
     ede:	6e 89       	ldd	r22, Y+22	; 0x16
     ee0:	7f 89       	ldd	r23, Y+23	; 0x17
     ee2:	40 93 f1 00 	sts	0x00F1, r20
     ee6:	bb 27       	eor	r27, r27
     ee8:	a7 2f       	mov	r26, r23
     eea:	96 2f       	mov	r25, r22
     eec:	85 2f       	mov	r24, r21
     eee:	80 93 f1 00 	sts	0x00F1, r24
     ef2:	cb 01       	movw	r24, r22
     ef4:	aa 27       	eor	r26, r26
     ef6:	bb 27       	eor	r27, r27
     ef8:	80 93 f1 00 	sts	0x00F1, r24
     efc:	47 2f       	mov	r20, r23
     efe:	55 27       	eor	r21, r21
     f00:	66 27       	eor	r22, r22
     f02:	77 27       	eor	r23, r23
     f04:	40 93 f1 00 	sts	0x00F1, r20
     f08:	88 8d       	ldd	r24, Y+24	; 0x18
     f0a:	80 93 f1 00 	sts	0x00F1, r24
     f0e:	89 8d       	ldd	r24, Y+25	; 0x19
     f10:	80 93 f1 00 	sts	0x00F1, r24
     f14:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f16:	80 93 f1 00 	sts	0x00F1, r24
     f1a:	80 91 e8 00 	lds	r24, 0x00E8
     f1e:	8e 77       	andi	r24, 0x7E	; 126
     f20:	80 93 e8 00 	sts	0x00E8, r24
     f24:	df 91       	pop	r29
     f26:	cf 91       	pop	r28
     f28:	1a cc       	rjmp	.-1996   	; 0x75e <Endpoint_ClearStatusStage>
     f2a:	80 91 2c 01 	lds	r24, 0x012C
     f2e:	81 32       	cpi	r24, 0x21	; 33
     f30:	09 f0       	breq	.+2      	; 0xf34 <CDC_Device_ProcessControlRequest+0xb8>
     f32:	50 c0       	rjmp	.+160    	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     f34:	80 91 e8 00 	lds	r24, 0x00E8
     f38:	87 7f       	andi	r24, 0xF7	; 247
     f3a:	80 93 e8 00 	sts	0x00E8, r24
     f3e:	80 91 e8 00 	lds	r24, 0x00E8
     f42:	82 fd       	sbrc	r24, 2
     f44:	04 c0       	rjmp	.+8      	; 0xf4e <CDC_Device_ProcessControlRequest+0xd2>
     f46:	8e b3       	in	r24, 0x1e	; 30
     f48:	81 11       	cpse	r24, r1
     f4a:	f9 cf       	rjmp	.-14     	; 0xf3e <CDC_Device_ProcessControlRequest+0xc2>
     f4c:	43 c0       	rjmp	.+134    	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     f4e:	30 91 f1 00 	lds	r19, 0x00F1
     f52:	20 91 f1 00 	lds	r18, 0x00F1
     f56:	90 91 f1 00 	lds	r25, 0x00F1
     f5a:	80 91 f1 00 	lds	r24, 0x00F1
     f5e:	3c 8b       	std	Y+20, r19	; 0x14
     f60:	2d 8b       	std	Y+21, r18	; 0x15
     f62:	9e 8b       	std	Y+22, r25	; 0x16
     f64:	8f 8b       	std	Y+23, r24	; 0x17
     f66:	80 91 f1 00 	lds	r24, 0x00F1
     f6a:	88 8f       	std	Y+24, r24	; 0x18
     f6c:	80 91 f1 00 	lds	r24, 0x00F1
     f70:	89 8f       	std	Y+25, r24	; 0x19
     f72:	80 91 f1 00 	lds	r24, 0x00F1
     f76:	8a 8f       	std	Y+26, r24	; 0x1a
     f78:	80 91 e8 00 	lds	r24, 0x00E8
     f7c:	8b 77       	andi	r24, 0x7B	; 123
     f7e:	80 93 e8 00 	sts	0x00E8, r24
     f82:	ed db       	rcall	.-2086   	; 0x75e <Endpoint_ClearStatusStage>
     f84:	ce 01       	movw	r24, r28
     f86:	df 91       	pop	r29
     f88:	cf 91       	pop	r28
     f8a:	77 cf       	rjmp	.-274    	; 0xe7a <CDC_Device_Event_Stub>
     f8c:	80 91 2c 01 	lds	r24, 0x012C
     f90:	81 32       	cpi	r24, 0x21	; 33
     f92:	01 f5       	brne	.+64     	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     f94:	80 91 e8 00 	lds	r24, 0x00E8
     f98:	87 7f       	andi	r24, 0xF7	; 247
     f9a:	80 93 e8 00 	sts	0x00E8, r24
     f9e:	df db       	rcall	.-2114   	; 0x75e <Endpoint_ClearStatusStage>
     fa0:	80 91 2e 01 	lds	r24, 0x012E
     fa4:	90 91 2f 01 	lds	r25, 0x012F
     fa8:	99 8b       	std	Y+17, r25	; 0x11
     faa:	88 8b       	std	Y+16, r24	; 0x10
     fac:	ce 01       	movw	r24, r28
     fae:	df 91       	pop	r29
     fb0:	cf 91       	pop	r28
     fb2:	63 cf       	rjmp	.-314    	; 0xe7a <CDC_Device_Event_Stub>
     fb4:	80 91 2c 01 	lds	r24, 0x012C
     fb8:	81 32       	cpi	r24, 0x21	; 33
     fba:	61 f4       	brne	.+24     	; 0xfd4 <CDC_Device_ProcessControlRequest+0x158>
     fbc:	80 91 e8 00 	lds	r24, 0x00E8
     fc0:	87 7f       	andi	r24, 0xF7	; 247
     fc2:	80 93 e8 00 	sts	0x00E8, r24
     fc6:	cb db       	rcall	.-2154   	; 0x75e <Endpoint_ClearStatusStage>
     fc8:	60 91 2e 01 	lds	r22, 0x012E
     fcc:	ce 01       	movw	r24, r28
     fce:	df 91       	pop	r29
     fd0:	cf 91       	pop	r28
     fd2:	53 cf       	rjmp	.-346    	; 0xe7a <CDC_Device_Event_Stub>
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	08 95       	ret

00000fda <__tablejump2__>:
     fda:	ee 0f       	add	r30, r30
     fdc:	ff 1f       	adc	r31, r31

00000fde <__tablejump__>:
     fde:	05 90       	lpm	r0, Z+
     fe0:	f4 91       	lpm	r31, Z
     fe2:	e0 2d       	mov	r30, r0
     fe4:	09 94       	ijmp

00000fe6 <snprintf>:
     fe6:	ae e0       	ldi	r26, 0x0E	; 14
     fe8:	b0 e0       	ldi	r27, 0x00	; 0
     fea:	e8 ef       	ldi	r30, 0xF8	; 248
     fec:	f7 e0       	ldi	r31, 0x07	; 7
     fee:	9f c2       	rjmp	.+1342   	; 0x152e <__prologue_saves__+0x1c>
     ff0:	0d 89       	ldd	r16, Y+21	; 0x15
     ff2:	1e 89       	ldd	r17, Y+22	; 0x16
     ff4:	8f 89       	ldd	r24, Y+23	; 0x17
     ff6:	98 8d       	ldd	r25, Y+24	; 0x18
     ff8:	26 e0       	ldi	r18, 0x06	; 6
     ffa:	2c 83       	std	Y+4, r18	; 0x04
     ffc:	1a 83       	std	Y+2, r17	; 0x02
     ffe:	09 83       	std	Y+1, r16	; 0x01
    1000:	97 ff       	sbrs	r25, 7
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <snprintf+0x22>
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	90 e8       	ldi	r25, 0x80	; 128
    1008:	01 97       	sbiw	r24, 0x01	; 1
    100a:	9e 83       	std	Y+6, r25	; 0x06
    100c:	8d 83       	std	Y+5, r24	; 0x05
    100e:	ae 01       	movw	r20, r28
    1010:	45 5e       	subi	r20, 0xE5	; 229
    1012:	5f 4f       	sbci	r21, 0xFF	; 255
    1014:	69 8d       	ldd	r22, Y+25	; 0x19
    1016:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1018:	ce 01       	movw	r24, r28
    101a:	01 96       	adiw	r24, 0x01	; 1
    101c:	11 d0       	rcall	.+34     	; 0x1040 <vfprintf>
    101e:	4d 81       	ldd	r20, Y+5	; 0x05
    1020:	5e 81       	ldd	r21, Y+6	; 0x06
    1022:	57 fd       	sbrc	r21, 7
    1024:	0a c0       	rjmp	.+20     	; 0x103a <snprintf+0x54>
    1026:	2f 81       	ldd	r18, Y+7	; 0x07
    1028:	38 85       	ldd	r19, Y+8	; 0x08
    102a:	42 17       	cp	r20, r18
    102c:	53 07       	cpc	r21, r19
    102e:	0c f4       	brge	.+2      	; 0x1032 <snprintf+0x4c>
    1030:	9a 01       	movw	r18, r20
    1032:	f8 01       	movw	r30, r16
    1034:	e2 0f       	add	r30, r18
    1036:	f3 1f       	adc	r31, r19
    1038:	10 82       	st	Z, r1
    103a:	2e 96       	adiw	r28, 0x0e	; 14
    103c:	e4 e0       	ldi	r30, 0x04	; 4
    103e:	93 c2       	rjmp	.+1318   	; 0x1566 <__epilogue_restores__+0x1c>

00001040 <vfprintf>:
    1040:	ac e0       	ldi	r26, 0x0C	; 12
    1042:	b0 e0       	ldi	r27, 0x00	; 0
    1044:	e5 e2       	ldi	r30, 0x25	; 37
    1046:	f8 e0       	ldi	r31, 0x08	; 8
    1048:	64 c2       	rjmp	.+1224   	; 0x1512 <__prologue_saves__>
    104a:	7c 01       	movw	r14, r24
    104c:	6b 01       	movw	r12, r22
    104e:	8a 01       	movw	r16, r20
    1050:	fc 01       	movw	r30, r24
    1052:	17 82       	std	Z+7, r1	; 0x07
    1054:	16 82       	std	Z+6, r1	; 0x06
    1056:	83 81       	ldd	r24, Z+3	; 0x03
    1058:	81 ff       	sbrs	r24, 1
    105a:	b0 c1       	rjmp	.+864    	; 0x13bc <vfprintf+0x37c>
    105c:	ce 01       	movw	r24, r28
    105e:	01 96       	adiw	r24, 0x01	; 1
    1060:	4c 01       	movw	r8, r24
    1062:	f7 01       	movw	r30, r14
    1064:	93 81       	ldd	r25, Z+3	; 0x03
    1066:	f6 01       	movw	r30, r12
    1068:	93 fd       	sbrc	r25, 3
    106a:	85 91       	lpm	r24, Z+
    106c:	93 ff       	sbrs	r25, 3
    106e:	81 91       	ld	r24, Z+
    1070:	6f 01       	movw	r12, r30
    1072:	88 23       	and	r24, r24
    1074:	09 f4       	brne	.+2      	; 0x1078 <vfprintf+0x38>
    1076:	9e c1       	rjmp	.+828    	; 0x13b4 <vfprintf+0x374>
    1078:	85 32       	cpi	r24, 0x25	; 37
    107a:	39 f4       	brne	.+14     	; 0x108a <vfprintf+0x4a>
    107c:	93 fd       	sbrc	r25, 3
    107e:	85 91       	lpm	r24, Z+
    1080:	93 ff       	sbrs	r25, 3
    1082:	81 91       	ld	r24, Z+
    1084:	6f 01       	movw	r12, r30
    1086:	85 32       	cpi	r24, 0x25	; 37
    1088:	21 f4       	brne	.+8      	; 0x1092 <vfprintf+0x52>
    108a:	b7 01       	movw	r22, r14
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	b1 d1       	rcall	.+866    	; 0x13f2 <fputc>
    1090:	e8 cf       	rjmp	.-48     	; 0x1062 <vfprintf+0x22>
    1092:	51 2c       	mov	r5, r1
    1094:	31 2c       	mov	r3, r1
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	20 32       	cpi	r18, 0x20	; 32
    109a:	a0 f4       	brcc	.+40     	; 0x10c4 <vfprintf+0x84>
    109c:	8b 32       	cpi	r24, 0x2B	; 43
    109e:	69 f0       	breq	.+26     	; 0x10ba <vfprintf+0x7a>
    10a0:	30 f4       	brcc	.+12     	; 0x10ae <vfprintf+0x6e>
    10a2:	80 32       	cpi	r24, 0x20	; 32
    10a4:	59 f0       	breq	.+22     	; 0x10bc <vfprintf+0x7c>
    10a6:	83 32       	cpi	r24, 0x23	; 35
    10a8:	69 f4       	brne	.+26     	; 0x10c4 <vfprintf+0x84>
    10aa:	20 61       	ori	r18, 0x10	; 16
    10ac:	2c c0       	rjmp	.+88     	; 0x1106 <vfprintf+0xc6>
    10ae:	8d 32       	cpi	r24, 0x2D	; 45
    10b0:	39 f0       	breq	.+14     	; 0x10c0 <vfprintf+0x80>
    10b2:	80 33       	cpi	r24, 0x30	; 48
    10b4:	39 f4       	brne	.+14     	; 0x10c4 <vfprintf+0x84>
    10b6:	21 60       	ori	r18, 0x01	; 1
    10b8:	26 c0       	rjmp	.+76     	; 0x1106 <vfprintf+0xc6>
    10ba:	22 60       	ori	r18, 0x02	; 2
    10bc:	24 60       	ori	r18, 0x04	; 4
    10be:	23 c0       	rjmp	.+70     	; 0x1106 <vfprintf+0xc6>
    10c0:	28 60       	ori	r18, 0x08	; 8
    10c2:	21 c0       	rjmp	.+66     	; 0x1106 <vfprintf+0xc6>
    10c4:	27 fd       	sbrc	r18, 7
    10c6:	27 c0       	rjmp	.+78     	; 0x1116 <vfprintf+0xd6>
    10c8:	30 ed       	ldi	r19, 0xD0	; 208
    10ca:	38 0f       	add	r19, r24
    10cc:	3a 30       	cpi	r19, 0x0A	; 10
    10ce:	78 f4       	brcc	.+30     	; 0x10ee <vfprintf+0xae>
    10d0:	26 ff       	sbrs	r18, 6
    10d2:	06 c0       	rjmp	.+12     	; 0x10e0 <vfprintf+0xa0>
    10d4:	fa e0       	ldi	r31, 0x0A	; 10
    10d6:	5f 9e       	mul	r5, r31
    10d8:	30 0d       	add	r19, r0
    10da:	11 24       	eor	r1, r1
    10dc:	53 2e       	mov	r5, r19
    10de:	13 c0       	rjmp	.+38     	; 0x1106 <vfprintf+0xc6>
    10e0:	8a e0       	ldi	r24, 0x0A	; 10
    10e2:	38 9e       	mul	r3, r24
    10e4:	30 0d       	add	r19, r0
    10e6:	11 24       	eor	r1, r1
    10e8:	33 2e       	mov	r3, r19
    10ea:	20 62       	ori	r18, 0x20	; 32
    10ec:	0c c0       	rjmp	.+24     	; 0x1106 <vfprintf+0xc6>
    10ee:	8e 32       	cpi	r24, 0x2E	; 46
    10f0:	21 f4       	brne	.+8      	; 0x10fa <vfprintf+0xba>
    10f2:	26 fd       	sbrc	r18, 6
    10f4:	5f c1       	rjmp	.+702    	; 0x13b4 <vfprintf+0x374>
    10f6:	20 64       	ori	r18, 0x40	; 64
    10f8:	06 c0       	rjmp	.+12     	; 0x1106 <vfprintf+0xc6>
    10fa:	8c 36       	cpi	r24, 0x6C	; 108
    10fc:	11 f4       	brne	.+4      	; 0x1102 <vfprintf+0xc2>
    10fe:	20 68       	ori	r18, 0x80	; 128
    1100:	02 c0       	rjmp	.+4      	; 0x1106 <vfprintf+0xc6>
    1102:	88 36       	cpi	r24, 0x68	; 104
    1104:	41 f4       	brne	.+16     	; 0x1116 <vfprintf+0xd6>
    1106:	f6 01       	movw	r30, r12
    1108:	93 fd       	sbrc	r25, 3
    110a:	85 91       	lpm	r24, Z+
    110c:	93 ff       	sbrs	r25, 3
    110e:	81 91       	ld	r24, Z+
    1110:	6f 01       	movw	r12, r30
    1112:	81 11       	cpse	r24, r1
    1114:	c1 cf       	rjmp	.-126    	; 0x1098 <vfprintf+0x58>
    1116:	98 2f       	mov	r25, r24
    1118:	9f 7d       	andi	r25, 0xDF	; 223
    111a:	95 54       	subi	r25, 0x45	; 69
    111c:	93 30       	cpi	r25, 0x03	; 3
    111e:	28 f4       	brcc	.+10     	; 0x112a <vfprintf+0xea>
    1120:	0c 5f       	subi	r16, 0xFC	; 252
    1122:	1f 4f       	sbci	r17, 0xFF	; 255
    1124:	ff e3       	ldi	r31, 0x3F	; 63
    1126:	f9 83       	std	Y+1, r31	; 0x01
    1128:	0d c0       	rjmp	.+26     	; 0x1144 <vfprintf+0x104>
    112a:	83 36       	cpi	r24, 0x63	; 99
    112c:	31 f0       	breq	.+12     	; 0x113a <vfprintf+0xfa>
    112e:	83 37       	cpi	r24, 0x73	; 115
    1130:	71 f0       	breq	.+28     	; 0x114e <vfprintf+0x10e>
    1132:	83 35       	cpi	r24, 0x53	; 83
    1134:	09 f0       	breq	.+2      	; 0x1138 <vfprintf+0xf8>
    1136:	57 c0       	rjmp	.+174    	; 0x11e6 <vfprintf+0x1a6>
    1138:	21 c0       	rjmp	.+66     	; 0x117c <vfprintf+0x13c>
    113a:	f8 01       	movw	r30, r16
    113c:	80 81       	ld	r24, Z
    113e:	89 83       	std	Y+1, r24	; 0x01
    1140:	0e 5f       	subi	r16, 0xFE	; 254
    1142:	1f 4f       	sbci	r17, 0xFF	; 255
    1144:	44 24       	eor	r4, r4
    1146:	43 94       	inc	r4
    1148:	51 2c       	mov	r5, r1
    114a:	54 01       	movw	r10, r8
    114c:	14 c0       	rjmp	.+40     	; 0x1176 <vfprintf+0x136>
    114e:	38 01       	movw	r6, r16
    1150:	f2 e0       	ldi	r31, 0x02	; 2
    1152:	6f 0e       	add	r6, r31
    1154:	71 1c       	adc	r7, r1
    1156:	f8 01       	movw	r30, r16
    1158:	a0 80       	ld	r10, Z
    115a:	b1 80       	ldd	r11, Z+1	; 0x01
    115c:	26 ff       	sbrs	r18, 6
    115e:	03 c0       	rjmp	.+6      	; 0x1166 <vfprintf+0x126>
    1160:	65 2d       	mov	r22, r5
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	02 c0       	rjmp	.+4      	; 0x116a <vfprintf+0x12a>
    1166:	6f ef       	ldi	r22, 0xFF	; 255
    1168:	7f ef       	ldi	r23, 0xFF	; 255
    116a:	c5 01       	movw	r24, r10
    116c:	2c 87       	std	Y+12, r18	; 0x0c
    116e:	36 d1       	rcall	.+620    	; 0x13dc <strnlen>
    1170:	2c 01       	movw	r4, r24
    1172:	83 01       	movw	r16, r6
    1174:	2c 85       	ldd	r18, Y+12	; 0x0c
    1176:	2f 77       	andi	r18, 0x7F	; 127
    1178:	22 2e       	mov	r2, r18
    117a:	16 c0       	rjmp	.+44     	; 0x11a8 <vfprintf+0x168>
    117c:	38 01       	movw	r6, r16
    117e:	f2 e0       	ldi	r31, 0x02	; 2
    1180:	6f 0e       	add	r6, r31
    1182:	71 1c       	adc	r7, r1
    1184:	f8 01       	movw	r30, r16
    1186:	a0 80       	ld	r10, Z
    1188:	b1 80       	ldd	r11, Z+1	; 0x01
    118a:	26 ff       	sbrs	r18, 6
    118c:	03 c0       	rjmp	.+6      	; 0x1194 <vfprintf+0x154>
    118e:	65 2d       	mov	r22, r5
    1190:	70 e0       	ldi	r23, 0x00	; 0
    1192:	02 c0       	rjmp	.+4      	; 0x1198 <vfprintf+0x158>
    1194:	6f ef       	ldi	r22, 0xFF	; 255
    1196:	7f ef       	ldi	r23, 0xFF	; 255
    1198:	c5 01       	movw	r24, r10
    119a:	2c 87       	std	Y+12, r18	; 0x0c
    119c:	14 d1       	rcall	.+552    	; 0x13c6 <strnlen_P>
    119e:	2c 01       	movw	r4, r24
    11a0:	2c 85       	ldd	r18, Y+12	; 0x0c
    11a2:	20 68       	ori	r18, 0x80	; 128
    11a4:	22 2e       	mov	r2, r18
    11a6:	83 01       	movw	r16, r6
    11a8:	23 fc       	sbrc	r2, 3
    11aa:	19 c0       	rjmp	.+50     	; 0x11de <vfprintf+0x19e>
    11ac:	83 2d       	mov	r24, r3
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	48 16       	cp	r4, r24
    11b2:	59 06       	cpc	r5, r25
    11b4:	a0 f4       	brcc	.+40     	; 0x11de <vfprintf+0x19e>
    11b6:	b7 01       	movw	r22, r14
    11b8:	80 e2       	ldi	r24, 0x20	; 32
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	1a d1       	rcall	.+564    	; 0x13f2 <fputc>
    11be:	3a 94       	dec	r3
    11c0:	f5 cf       	rjmp	.-22     	; 0x11ac <vfprintf+0x16c>
    11c2:	f5 01       	movw	r30, r10
    11c4:	27 fc       	sbrc	r2, 7
    11c6:	85 91       	lpm	r24, Z+
    11c8:	27 fe       	sbrs	r2, 7
    11ca:	81 91       	ld	r24, Z+
    11cc:	5f 01       	movw	r10, r30
    11ce:	b7 01       	movw	r22, r14
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	0f d1       	rcall	.+542    	; 0x13f2 <fputc>
    11d4:	31 10       	cpse	r3, r1
    11d6:	3a 94       	dec	r3
    11d8:	f1 e0       	ldi	r31, 0x01	; 1
    11da:	4f 1a       	sub	r4, r31
    11dc:	51 08       	sbc	r5, r1
    11de:	41 14       	cp	r4, r1
    11e0:	51 04       	cpc	r5, r1
    11e2:	79 f7       	brne	.-34     	; 0x11c2 <vfprintf+0x182>
    11e4:	de c0       	rjmp	.+444    	; 0x13a2 <vfprintf+0x362>
    11e6:	84 36       	cpi	r24, 0x64	; 100
    11e8:	11 f0       	breq	.+4      	; 0x11ee <vfprintf+0x1ae>
    11ea:	89 36       	cpi	r24, 0x69	; 105
    11ec:	31 f5       	brne	.+76     	; 0x123a <vfprintf+0x1fa>
    11ee:	f8 01       	movw	r30, r16
    11f0:	27 ff       	sbrs	r18, 7
    11f2:	07 c0       	rjmp	.+14     	; 0x1202 <vfprintf+0x1c2>
    11f4:	60 81       	ld	r22, Z
    11f6:	71 81       	ldd	r23, Z+1	; 0x01
    11f8:	82 81       	ldd	r24, Z+2	; 0x02
    11fa:	93 81       	ldd	r25, Z+3	; 0x03
    11fc:	0c 5f       	subi	r16, 0xFC	; 252
    11fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1200:	08 c0       	rjmp	.+16     	; 0x1212 <vfprintf+0x1d2>
    1202:	60 81       	ld	r22, Z
    1204:	71 81       	ldd	r23, Z+1	; 0x01
    1206:	88 27       	eor	r24, r24
    1208:	77 fd       	sbrc	r23, 7
    120a:	80 95       	com	r24
    120c:	98 2f       	mov	r25, r24
    120e:	0e 5f       	subi	r16, 0xFE	; 254
    1210:	1f 4f       	sbci	r17, 0xFF	; 255
    1212:	2f 76       	andi	r18, 0x6F	; 111
    1214:	b2 2e       	mov	r11, r18
    1216:	97 ff       	sbrs	r25, 7
    1218:	09 c0       	rjmp	.+18     	; 0x122c <vfprintf+0x1ec>
    121a:	90 95       	com	r25
    121c:	80 95       	com	r24
    121e:	70 95       	com	r23
    1220:	61 95       	neg	r22
    1222:	7f 4f       	sbci	r23, 0xFF	; 255
    1224:	8f 4f       	sbci	r24, 0xFF	; 255
    1226:	9f 4f       	sbci	r25, 0xFF	; 255
    1228:	20 68       	ori	r18, 0x80	; 128
    122a:	b2 2e       	mov	r11, r18
    122c:	2a e0       	ldi	r18, 0x0A	; 10
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	a4 01       	movw	r20, r8
    1232:	11 d1       	rcall	.+546    	; 0x1456 <__ultoa_invert>
    1234:	a8 2e       	mov	r10, r24
    1236:	a8 18       	sub	r10, r8
    1238:	43 c0       	rjmp	.+134    	; 0x12c0 <vfprintf+0x280>
    123a:	85 37       	cpi	r24, 0x75	; 117
    123c:	29 f4       	brne	.+10     	; 0x1248 <vfprintf+0x208>
    123e:	2f 7e       	andi	r18, 0xEF	; 239
    1240:	b2 2e       	mov	r11, r18
    1242:	2a e0       	ldi	r18, 0x0A	; 10
    1244:	30 e0       	ldi	r19, 0x00	; 0
    1246:	25 c0       	rjmp	.+74     	; 0x1292 <vfprintf+0x252>
    1248:	f2 2f       	mov	r31, r18
    124a:	f9 7f       	andi	r31, 0xF9	; 249
    124c:	bf 2e       	mov	r11, r31
    124e:	8f 36       	cpi	r24, 0x6F	; 111
    1250:	c1 f0       	breq	.+48     	; 0x1282 <vfprintf+0x242>
    1252:	18 f4       	brcc	.+6      	; 0x125a <vfprintf+0x21a>
    1254:	88 35       	cpi	r24, 0x58	; 88
    1256:	79 f0       	breq	.+30     	; 0x1276 <vfprintf+0x236>
    1258:	ad c0       	rjmp	.+346    	; 0x13b4 <vfprintf+0x374>
    125a:	80 37       	cpi	r24, 0x70	; 112
    125c:	19 f0       	breq	.+6      	; 0x1264 <vfprintf+0x224>
    125e:	88 37       	cpi	r24, 0x78	; 120
    1260:	21 f0       	breq	.+8      	; 0x126a <vfprintf+0x22a>
    1262:	a8 c0       	rjmp	.+336    	; 0x13b4 <vfprintf+0x374>
    1264:	2f 2f       	mov	r18, r31
    1266:	20 61       	ori	r18, 0x10	; 16
    1268:	b2 2e       	mov	r11, r18
    126a:	b4 fe       	sbrs	r11, 4
    126c:	0d c0       	rjmp	.+26     	; 0x1288 <vfprintf+0x248>
    126e:	8b 2d       	mov	r24, r11
    1270:	84 60       	ori	r24, 0x04	; 4
    1272:	b8 2e       	mov	r11, r24
    1274:	09 c0       	rjmp	.+18     	; 0x1288 <vfprintf+0x248>
    1276:	24 ff       	sbrs	r18, 4
    1278:	0a c0       	rjmp	.+20     	; 0x128e <vfprintf+0x24e>
    127a:	9f 2f       	mov	r25, r31
    127c:	96 60       	ori	r25, 0x06	; 6
    127e:	b9 2e       	mov	r11, r25
    1280:	06 c0       	rjmp	.+12     	; 0x128e <vfprintf+0x24e>
    1282:	28 e0       	ldi	r18, 0x08	; 8
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	05 c0       	rjmp	.+10     	; 0x1292 <vfprintf+0x252>
    1288:	20 e1       	ldi	r18, 0x10	; 16
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	02 c0       	rjmp	.+4      	; 0x1292 <vfprintf+0x252>
    128e:	20 e1       	ldi	r18, 0x10	; 16
    1290:	32 e0       	ldi	r19, 0x02	; 2
    1292:	f8 01       	movw	r30, r16
    1294:	b7 fe       	sbrs	r11, 7
    1296:	07 c0       	rjmp	.+14     	; 0x12a6 <vfprintf+0x266>
    1298:	60 81       	ld	r22, Z
    129a:	71 81       	ldd	r23, Z+1	; 0x01
    129c:	82 81       	ldd	r24, Z+2	; 0x02
    129e:	93 81       	ldd	r25, Z+3	; 0x03
    12a0:	0c 5f       	subi	r16, 0xFC	; 252
    12a2:	1f 4f       	sbci	r17, 0xFF	; 255
    12a4:	06 c0       	rjmp	.+12     	; 0x12b2 <vfprintf+0x272>
    12a6:	60 81       	ld	r22, Z
    12a8:	71 81       	ldd	r23, Z+1	; 0x01
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	0e 5f       	subi	r16, 0xFE	; 254
    12b0:	1f 4f       	sbci	r17, 0xFF	; 255
    12b2:	a4 01       	movw	r20, r8
    12b4:	d0 d0       	rcall	.+416    	; 0x1456 <__ultoa_invert>
    12b6:	a8 2e       	mov	r10, r24
    12b8:	a8 18       	sub	r10, r8
    12ba:	fb 2d       	mov	r31, r11
    12bc:	ff 77       	andi	r31, 0x7F	; 127
    12be:	bf 2e       	mov	r11, r31
    12c0:	b6 fe       	sbrs	r11, 6
    12c2:	0b c0       	rjmp	.+22     	; 0x12da <vfprintf+0x29a>
    12c4:	2b 2d       	mov	r18, r11
    12c6:	2e 7f       	andi	r18, 0xFE	; 254
    12c8:	a5 14       	cp	r10, r5
    12ca:	50 f4       	brcc	.+20     	; 0x12e0 <vfprintf+0x2a0>
    12cc:	b4 fe       	sbrs	r11, 4
    12ce:	0a c0       	rjmp	.+20     	; 0x12e4 <vfprintf+0x2a4>
    12d0:	b2 fc       	sbrc	r11, 2
    12d2:	08 c0       	rjmp	.+16     	; 0x12e4 <vfprintf+0x2a4>
    12d4:	2b 2d       	mov	r18, r11
    12d6:	2e 7e       	andi	r18, 0xEE	; 238
    12d8:	05 c0       	rjmp	.+10     	; 0x12e4 <vfprintf+0x2a4>
    12da:	7a 2c       	mov	r7, r10
    12dc:	2b 2d       	mov	r18, r11
    12de:	03 c0       	rjmp	.+6      	; 0x12e6 <vfprintf+0x2a6>
    12e0:	7a 2c       	mov	r7, r10
    12e2:	01 c0       	rjmp	.+2      	; 0x12e6 <vfprintf+0x2a6>
    12e4:	75 2c       	mov	r7, r5
    12e6:	24 ff       	sbrs	r18, 4
    12e8:	0d c0       	rjmp	.+26     	; 0x1304 <vfprintf+0x2c4>
    12ea:	fe 01       	movw	r30, r28
    12ec:	ea 0d       	add	r30, r10
    12ee:	f1 1d       	adc	r31, r1
    12f0:	80 81       	ld	r24, Z
    12f2:	80 33       	cpi	r24, 0x30	; 48
    12f4:	11 f4       	brne	.+4      	; 0x12fa <vfprintf+0x2ba>
    12f6:	29 7e       	andi	r18, 0xE9	; 233
    12f8:	09 c0       	rjmp	.+18     	; 0x130c <vfprintf+0x2cc>
    12fa:	22 ff       	sbrs	r18, 2
    12fc:	06 c0       	rjmp	.+12     	; 0x130a <vfprintf+0x2ca>
    12fe:	73 94       	inc	r7
    1300:	73 94       	inc	r7
    1302:	04 c0       	rjmp	.+8      	; 0x130c <vfprintf+0x2cc>
    1304:	82 2f       	mov	r24, r18
    1306:	86 78       	andi	r24, 0x86	; 134
    1308:	09 f0       	breq	.+2      	; 0x130c <vfprintf+0x2cc>
    130a:	73 94       	inc	r7
    130c:	23 fd       	sbrc	r18, 3
    130e:	12 c0       	rjmp	.+36     	; 0x1334 <vfprintf+0x2f4>
    1310:	20 ff       	sbrs	r18, 0
    1312:	06 c0       	rjmp	.+12     	; 0x1320 <vfprintf+0x2e0>
    1314:	5a 2c       	mov	r5, r10
    1316:	73 14       	cp	r7, r3
    1318:	18 f4       	brcc	.+6      	; 0x1320 <vfprintf+0x2e0>
    131a:	53 0c       	add	r5, r3
    131c:	57 18       	sub	r5, r7
    131e:	73 2c       	mov	r7, r3
    1320:	73 14       	cp	r7, r3
    1322:	60 f4       	brcc	.+24     	; 0x133c <vfprintf+0x2fc>
    1324:	b7 01       	movw	r22, r14
    1326:	80 e2       	ldi	r24, 0x20	; 32
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	2c 87       	std	Y+12, r18	; 0x0c
    132c:	62 d0       	rcall	.+196    	; 0x13f2 <fputc>
    132e:	73 94       	inc	r7
    1330:	2c 85       	ldd	r18, Y+12	; 0x0c
    1332:	f6 cf       	rjmp	.-20     	; 0x1320 <vfprintf+0x2e0>
    1334:	73 14       	cp	r7, r3
    1336:	10 f4       	brcc	.+4      	; 0x133c <vfprintf+0x2fc>
    1338:	37 18       	sub	r3, r7
    133a:	01 c0       	rjmp	.+2      	; 0x133e <vfprintf+0x2fe>
    133c:	31 2c       	mov	r3, r1
    133e:	24 ff       	sbrs	r18, 4
    1340:	11 c0       	rjmp	.+34     	; 0x1364 <vfprintf+0x324>
    1342:	b7 01       	movw	r22, r14
    1344:	80 e3       	ldi	r24, 0x30	; 48
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	2c 87       	std	Y+12, r18	; 0x0c
    134a:	53 d0       	rcall	.+166    	; 0x13f2 <fputc>
    134c:	2c 85       	ldd	r18, Y+12	; 0x0c
    134e:	22 ff       	sbrs	r18, 2
    1350:	16 c0       	rjmp	.+44     	; 0x137e <vfprintf+0x33e>
    1352:	21 ff       	sbrs	r18, 1
    1354:	03 c0       	rjmp	.+6      	; 0x135c <vfprintf+0x31c>
    1356:	88 e5       	ldi	r24, 0x58	; 88
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	02 c0       	rjmp	.+4      	; 0x1360 <vfprintf+0x320>
    135c:	88 e7       	ldi	r24, 0x78	; 120
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	b7 01       	movw	r22, r14
    1362:	0c c0       	rjmp	.+24     	; 0x137c <vfprintf+0x33c>
    1364:	82 2f       	mov	r24, r18
    1366:	86 78       	andi	r24, 0x86	; 134
    1368:	51 f0       	breq	.+20     	; 0x137e <vfprintf+0x33e>
    136a:	21 fd       	sbrc	r18, 1
    136c:	02 c0       	rjmp	.+4      	; 0x1372 <vfprintf+0x332>
    136e:	80 e2       	ldi	r24, 0x20	; 32
    1370:	01 c0       	rjmp	.+2      	; 0x1374 <vfprintf+0x334>
    1372:	8b e2       	ldi	r24, 0x2B	; 43
    1374:	27 fd       	sbrc	r18, 7
    1376:	8d e2       	ldi	r24, 0x2D	; 45
    1378:	b7 01       	movw	r22, r14
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	3a d0       	rcall	.+116    	; 0x13f2 <fputc>
    137e:	a5 14       	cp	r10, r5
    1380:	30 f4       	brcc	.+12     	; 0x138e <vfprintf+0x34e>
    1382:	b7 01       	movw	r22, r14
    1384:	80 e3       	ldi	r24, 0x30	; 48
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	34 d0       	rcall	.+104    	; 0x13f2 <fputc>
    138a:	5a 94       	dec	r5
    138c:	f8 cf       	rjmp	.-16     	; 0x137e <vfprintf+0x33e>
    138e:	aa 94       	dec	r10
    1390:	f4 01       	movw	r30, r8
    1392:	ea 0d       	add	r30, r10
    1394:	f1 1d       	adc	r31, r1
    1396:	80 81       	ld	r24, Z
    1398:	b7 01       	movw	r22, r14
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	2a d0       	rcall	.+84     	; 0x13f2 <fputc>
    139e:	a1 10       	cpse	r10, r1
    13a0:	f6 cf       	rjmp	.-20     	; 0x138e <vfprintf+0x34e>
    13a2:	33 20       	and	r3, r3
    13a4:	09 f4       	brne	.+2      	; 0x13a8 <vfprintf+0x368>
    13a6:	5d ce       	rjmp	.-838    	; 0x1062 <vfprintf+0x22>
    13a8:	b7 01       	movw	r22, r14
    13aa:	80 e2       	ldi	r24, 0x20	; 32
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	21 d0       	rcall	.+66     	; 0x13f2 <fputc>
    13b0:	3a 94       	dec	r3
    13b2:	f7 cf       	rjmp	.-18     	; 0x13a2 <vfprintf+0x362>
    13b4:	f7 01       	movw	r30, r14
    13b6:	86 81       	ldd	r24, Z+6	; 0x06
    13b8:	97 81       	ldd	r25, Z+7	; 0x07
    13ba:	02 c0       	rjmp	.+4      	; 0x13c0 <vfprintf+0x380>
    13bc:	8f ef       	ldi	r24, 0xFF	; 255
    13be:	9f ef       	ldi	r25, 0xFF	; 255
    13c0:	2c 96       	adiw	r28, 0x0c	; 12
    13c2:	e2 e1       	ldi	r30, 0x12	; 18
    13c4:	c2 c0       	rjmp	.+388    	; 0x154a <__epilogue_restores__>

000013c6 <strnlen_P>:
    13c6:	fc 01       	movw	r30, r24
    13c8:	05 90       	lpm	r0, Z+
    13ca:	61 50       	subi	r22, 0x01	; 1
    13cc:	70 40       	sbci	r23, 0x00	; 0
    13ce:	01 10       	cpse	r0, r1
    13d0:	d8 f7       	brcc	.-10     	; 0x13c8 <strnlen_P+0x2>
    13d2:	80 95       	com	r24
    13d4:	90 95       	com	r25
    13d6:	8e 0f       	add	r24, r30
    13d8:	9f 1f       	adc	r25, r31
    13da:	08 95       	ret

000013dc <strnlen>:
    13dc:	fc 01       	movw	r30, r24
    13de:	61 50       	subi	r22, 0x01	; 1
    13e0:	70 40       	sbci	r23, 0x00	; 0
    13e2:	01 90       	ld	r0, Z+
    13e4:	01 10       	cpse	r0, r1
    13e6:	d8 f7       	brcc	.-10     	; 0x13de <strnlen+0x2>
    13e8:	80 95       	com	r24
    13ea:	90 95       	com	r25
    13ec:	8e 0f       	add	r24, r30
    13ee:	9f 1f       	adc	r25, r31
    13f0:	08 95       	ret

000013f2 <fputc>:
    13f2:	0f 93       	push	r16
    13f4:	1f 93       	push	r17
    13f6:	cf 93       	push	r28
    13f8:	df 93       	push	r29
    13fa:	18 2f       	mov	r17, r24
    13fc:	09 2f       	mov	r16, r25
    13fe:	eb 01       	movw	r28, r22
    1400:	8b 81       	ldd	r24, Y+3	; 0x03
    1402:	81 fd       	sbrc	r24, 1
    1404:	03 c0       	rjmp	.+6      	; 0x140c <fputc+0x1a>
    1406:	8f ef       	ldi	r24, 0xFF	; 255
    1408:	9f ef       	ldi	r25, 0xFF	; 255
    140a:	20 c0       	rjmp	.+64     	; 0x144c <fputc+0x5a>
    140c:	82 ff       	sbrs	r24, 2
    140e:	10 c0       	rjmp	.+32     	; 0x1430 <fputc+0x3e>
    1410:	4e 81       	ldd	r20, Y+6	; 0x06
    1412:	5f 81       	ldd	r21, Y+7	; 0x07
    1414:	2c 81       	ldd	r18, Y+4	; 0x04
    1416:	3d 81       	ldd	r19, Y+5	; 0x05
    1418:	42 17       	cp	r20, r18
    141a:	53 07       	cpc	r21, r19
    141c:	7c f4       	brge	.+30     	; 0x143c <fputc+0x4a>
    141e:	e8 81       	ld	r30, Y
    1420:	f9 81       	ldd	r31, Y+1	; 0x01
    1422:	9f 01       	movw	r18, r30
    1424:	2f 5f       	subi	r18, 0xFF	; 255
    1426:	3f 4f       	sbci	r19, 0xFF	; 255
    1428:	39 83       	std	Y+1, r19	; 0x01
    142a:	28 83       	st	Y, r18
    142c:	10 83       	st	Z, r17
    142e:	06 c0       	rjmp	.+12     	; 0x143c <fputc+0x4a>
    1430:	e8 85       	ldd	r30, Y+8	; 0x08
    1432:	f9 85       	ldd	r31, Y+9	; 0x09
    1434:	81 2f       	mov	r24, r17
    1436:	09 95       	icall
    1438:	89 2b       	or	r24, r25
    143a:	29 f7       	brne	.-54     	; 0x1406 <fputc+0x14>
    143c:	2e 81       	ldd	r18, Y+6	; 0x06
    143e:	3f 81       	ldd	r19, Y+7	; 0x07
    1440:	2f 5f       	subi	r18, 0xFF	; 255
    1442:	3f 4f       	sbci	r19, 0xFF	; 255
    1444:	3f 83       	std	Y+7, r19	; 0x07
    1446:	2e 83       	std	Y+6, r18	; 0x06
    1448:	81 2f       	mov	r24, r17
    144a:	90 2f       	mov	r25, r16
    144c:	df 91       	pop	r29
    144e:	cf 91       	pop	r28
    1450:	1f 91       	pop	r17
    1452:	0f 91       	pop	r16
    1454:	08 95       	ret

00001456 <__ultoa_invert>:
    1456:	fa 01       	movw	r30, r20
    1458:	aa 27       	eor	r26, r26
    145a:	28 30       	cpi	r18, 0x08	; 8
    145c:	51 f1       	breq	.+84     	; 0x14b2 <__ultoa_invert+0x5c>
    145e:	20 31       	cpi	r18, 0x10	; 16
    1460:	81 f1       	breq	.+96     	; 0x14c2 <__ultoa_invert+0x6c>
    1462:	e8 94       	clt
    1464:	6f 93       	push	r22
    1466:	6e 7f       	andi	r22, 0xFE	; 254
    1468:	6e 5f       	subi	r22, 0xFE	; 254
    146a:	7f 4f       	sbci	r23, 0xFF	; 255
    146c:	8f 4f       	sbci	r24, 0xFF	; 255
    146e:	9f 4f       	sbci	r25, 0xFF	; 255
    1470:	af 4f       	sbci	r26, 0xFF	; 255
    1472:	b1 e0       	ldi	r27, 0x01	; 1
    1474:	3e d0       	rcall	.+124    	; 0x14f2 <__ultoa_invert+0x9c>
    1476:	b4 e0       	ldi	r27, 0x04	; 4
    1478:	3c d0       	rcall	.+120    	; 0x14f2 <__ultoa_invert+0x9c>
    147a:	67 0f       	add	r22, r23
    147c:	78 1f       	adc	r23, r24
    147e:	89 1f       	adc	r24, r25
    1480:	9a 1f       	adc	r25, r26
    1482:	a1 1d       	adc	r26, r1
    1484:	68 0f       	add	r22, r24
    1486:	79 1f       	adc	r23, r25
    1488:	8a 1f       	adc	r24, r26
    148a:	91 1d       	adc	r25, r1
    148c:	a1 1d       	adc	r26, r1
    148e:	6a 0f       	add	r22, r26
    1490:	71 1d       	adc	r23, r1
    1492:	81 1d       	adc	r24, r1
    1494:	91 1d       	adc	r25, r1
    1496:	a1 1d       	adc	r26, r1
    1498:	20 d0       	rcall	.+64     	; 0x14da <__ultoa_invert+0x84>
    149a:	09 f4       	brne	.+2      	; 0x149e <__ultoa_invert+0x48>
    149c:	68 94       	set
    149e:	3f 91       	pop	r19
    14a0:	2a e0       	ldi	r18, 0x0A	; 10
    14a2:	26 9f       	mul	r18, r22
    14a4:	11 24       	eor	r1, r1
    14a6:	30 19       	sub	r19, r0
    14a8:	30 5d       	subi	r19, 0xD0	; 208
    14aa:	31 93       	st	Z+, r19
    14ac:	de f6       	brtc	.-74     	; 0x1464 <__ultoa_invert+0xe>
    14ae:	cf 01       	movw	r24, r30
    14b0:	08 95       	ret
    14b2:	46 2f       	mov	r20, r22
    14b4:	47 70       	andi	r20, 0x07	; 7
    14b6:	40 5d       	subi	r20, 0xD0	; 208
    14b8:	41 93       	st	Z+, r20
    14ba:	b3 e0       	ldi	r27, 0x03	; 3
    14bc:	0f d0       	rcall	.+30     	; 0x14dc <__ultoa_invert+0x86>
    14be:	c9 f7       	brne	.-14     	; 0x14b2 <__ultoa_invert+0x5c>
    14c0:	f6 cf       	rjmp	.-20     	; 0x14ae <__ultoa_invert+0x58>
    14c2:	46 2f       	mov	r20, r22
    14c4:	4f 70       	andi	r20, 0x0F	; 15
    14c6:	40 5d       	subi	r20, 0xD0	; 208
    14c8:	4a 33       	cpi	r20, 0x3A	; 58
    14ca:	18 f0       	brcs	.+6      	; 0x14d2 <__ultoa_invert+0x7c>
    14cc:	49 5d       	subi	r20, 0xD9	; 217
    14ce:	31 fd       	sbrc	r19, 1
    14d0:	40 52       	subi	r20, 0x20	; 32
    14d2:	41 93       	st	Z+, r20
    14d4:	02 d0       	rcall	.+4      	; 0x14da <__ultoa_invert+0x84>
    14d6:	a9 f7       	brne	.-22     	; 0x14c2 <__ultoa_invert+0x6c>
    14d8:	ea cf       	rjmp	.-44     	; 0x14ae <__ultoa_invert+0x58>
    14da:	b4 e0       	ldi	r27, 0x04	; 4
    14dc:	a6 95       	lsr	r26
    14de:	97 95       	ror	r25
    14e0:	87 95       	ror	r24
    14e2:	77 95       	ror	r23
    14e4:	67 95       	ror	r22
    14e6:	ba 95       	dec	r27
    14e8:	c9 f7       	brne	.-14     	; 0x14dc <__ultoa_invert+0x86>
    14ea:	00 97       	sbiw	r24, 0x00	; 0
    14ec:	61 05       	cpc	r22, r1
    14ee:	71 05       	cpc	r23, r1
    14f0:	08 95       	ret
    14f2:	9b 01       	movw	r18, r22
    14f4:	ac 01       	movw	r20, r24
    14f6:	0a 2e       	mov	r0, r26
    14f8:	06 94       	lsr	r0
    14fa:	57 95       	ror	r21
    14fc:	47 95       	ror	r20
    14fe:	37 95       	ror	r19
    1500:	27 95       	ror	r18
    1502:	ba 95       	dec	r27
    1504:	c9 f7       	brne	.-14     	; 0x14f8 <__ultoa_invert+0xa2>
    1506:	62 0f       	add	r22, r18
    1508:	73 1f       	adc	r23, r19
    150a:	84 1f       	adc	r24, r20
    150c:	95 1f       	adc	r25, r21
    150e:	a0 1d       	adc	r26, r0
    1510:	08 95       	ret

00001512 <__prologue_saves__>:
    1512:	2f 92       	push	r2
    1514:	3f 92       	push	r3
    1516:	4f 92       	push	r4
    1518:	5f 92       	push	r5
    151a:	6f 92       	push	r6
    151c:	7f 92       	push	r7
    151e:	8f 92       	push	r8
    1520:	9f 92       	push	r9
    1522:	af 92       	push	r10
    1524:	bf 92       	push	r11
    1526:	cf 92       	push	r12
    1528:	df 92       	push	r13
    152a:	ef 92       	push	r14
    152c:	ff 92       	push	r15
    152e:	0f 93       	push	r16
    1530:	1f 93       	push	r17
    1532:	cf 93       	push	r28
    1534:	df 93       	push	r29
    1536:	cd b7       	in	r28, 0x3d	; 61
    1538:	de b7       	in	r29, 0x3e	; 62
    153a:	ca 1b       	sub	r28, r26
    153c:	db 0b       	sbc	r29, r27
    153e:	0f b6       	in	r0, 0x3f	; 63
    1540:	f8 94       	cli
    1542:	de bf       	out	0x3e, r29	; 62
    1544:	0f be       	out	0x3f, r0	; 63
    1546:	cd bf       	out	0x3d, r28	; 61
    1548:	09 94       	ijmp

0000154a <__epilogue_restores__>:
    154a:	2a 88       	ldd	r2, Y+18	; 0x12
    154c:	39 88       	ldd	r3, Y+17	; 0x11
    154e:	48 88       	ldd	r4, Y+16	; 0x10
    1550:	5f 84       	ldd	r5, Y+15	; 0x0f
    1552:	6e 84       	ldd	r6, Y+14	; 0x0e
    1554:	7d 84       	ldd	r7, Y+13	; 0x0d
    1556:	8c 84       	ldd	r8, Y+12	; 0x0c
    1558:	9b 84       	ldd	r9, Y+11	; 0x0b
    155a:	aa 84       	ldd	r10, Y+10	; 0x0a
    155c:	b9 84       	ldd	r11, Y+9	; 0x09
    155e:	c8 84       	ldd	r12, Y+8	; 0x08
    1560:	df 80       	ldd	r13, Y+7	; 0x07
    1562:	ee 80       	ldd	r14, Y+6	; 0x06
    1564:	fd 80       	ldd	r15, Y+5	; 0x05
    1566:	0c 81       	ldd	r16, Y+4	; 0x04
    1568:	1b 81       	ldd	r17, Y+3	; 0x03
    156a:	aa 81       	ldd	r26, Y+2	; 0x02
    156c:	b9 81       	ldd	r27, Y+1	; 0x01
    156e:	ce 0f       	add	r28, r30
    1570:	d1 1d       	adc	r29, r1
    1572:	0f b6       	in	r0, 0x3f	; 63
    1574:	f8 94       	cli
    1576:	de bf       	out	0x3e, r29	; 62
    1578:	0f be       	out	0x3f, r0	; 63
    157a:	cd bf       	out	0x3d, r28	; 61
    157c:	ed 01       	movw	r28, r26
    157e:	08 95       	ret

00001580 <_exit>:
    1580:	f8 94       	cli

00001582 <__stop_program>:
    1582:	ff cf       	rjmp	.-2      	; 0x1582 <__stop_program>
